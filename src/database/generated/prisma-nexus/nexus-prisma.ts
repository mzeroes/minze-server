/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { GraphQLResolveInfo } from "graphql";
import { core } from "nexus";
import * as prisma from "../prisma-client";

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      User: UserObject
      PhoneNumber: PhoneNumberObject
      Review: ReviewObject
      Product: ProductObject
      ProductRating: ProductRatingObject
      ProductPhoto: ProductPhotoObject
      UserPhoto: UserPhotoObject
      UserConnection: UserConnectionObject
      PageInfo: PageInfoObject
      UserEdge: UserEdgeObject
      AggregateUser: AggregateUserObject
      PhoneNumberConnection: PhoneNumberConnectionObject
      PhoneNumberEdge: PhoneNumberEdgeObject
      AggregatePhoneNumber: AggregatePhoneNumberObject
      ProductConnection: ProductConnectionObject
      ProductEdge: ProductEdgeObject
      AggregateProduct: AggregateProductObject
      ProductRatingConnection: ProductRatingConnectionObject
      ProductRatingEdge: ProductRatingEdgeObject
      AggregateProductRating: AggregateProductRatingObject
      ReviewConnection: ReviewConnectionObject
      ReviewEdge: ReviewEdgeObject
      AggregateReview: AggregateReviewObject
      ProductPhotoConnection: ProductPhotoConnectionObject
      ProductPhotoEdge: ProductPhotoEdgeObject
      AggregateProductPhoto: AggregateProductPhotoObject
      UserPhotoConnection: UserPhotoConnectionObject
      UserPhotoEdge: UserPhotoEdgeObject
      AggregateUserPhoto: AggregateUserPhotoObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      UserSubscriptionPayload: UserSubscriptionPayloadObject
      UserPreviousValues: UserPreviousValuesObject
      PhoneNumberSubscriptionPayload: PhoneNumberSubscriptionPayloadObject
      PhoneNumberPreviousValues: PhoneNumberPreviousValuesObject
      ProductSubscriptionPayload: ProductSubscriptionPayloadObject
      ProductPreviousValues: ProductPreviousValuesObject
      ProductRatingSubscriptionPayload: ProductRatingSubscriptionPayloadObject
      ProductRatingPreviousValues: ProductRatingPreviousValuesObject
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadObject
      ReviewPreviousValues: ReviewPreviousValuesObject
      ProductPhotoSubscriptionPayload: ProductPhotoSubscriptionPayloadObject
      ProductPhotoPreviousValues: ProductPhotoPreviousValuesObject
      UserPhotoSubscriptionPayload: UserPhotoSubscriptionPayloadObject
      UserPhotoPreviousValues: UserPhotoPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      User: UserFieldDetails
      PhoneNumber: PhoneNumberFieldDetails
      Review: ReviewFieldDetails
      Product: ProductFieldDetails
      ProductRating: ProductRatingFieldDetails
      ProductPhoto: ProductPhotoFieldDetails
      UserPhoto: UserPhotoFieldDetails
      UserConnection: UserConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      UserEdge: UserEdgeFieldDetails
      AggregateUser: AggregateUserFieldDetails
      PhoneNumberConnection: PhoneNumberConnectionFieldDetails
      PhoneNumberEdge: PhoneNumberEdgeFieldDetails
      AggregatePhoneNumber: AggregatePhoneNumberFieldDetails
      ProductConnection: ProductConnectionFieldDetails
      ProductEdge: ProductEdgeFieldDetails
      AggregateProduct: AggregateProductFieldDetails
      ProductRatingConnection: ProductRatingConnectionFieldDetails
      ProductRatingEdge: ProductRatingEdgeFieldDetails
      AggregateProductRating: AggregateProductRatingFieldDetails
      ReviewConnection: ReviewConnectionFieldDetails
      ReviewEdge: ReviewEdgeFieldDetails
      AggregateReview: AggregateReviewFieldDetails
      ProductPhotoConnection: ProductPhotoConnectionFieldDetails
      ProductPhotoEdge: ProductPhotoEdgeFieldDetails
      AggregateProductPhoto: AggregateProductPhotoFieldDetails
      UserPhotoConnection: UserPhotoConnectionFieldDetails
      UserPhotoEdge: UserPhotoEdgeFieldDetails
      AggregateUserPhoto: AggregateUserPhotoFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      UserSubscriptionPayload: UserSubscriptionPayloadFieldDetails
      UserPreviousValues: UserPreviousValuesFieldDetails
      PhoneNumberSubscriptionPayload: PhoneNumberSubscriptionPayloadFieldDetails
      PhoneNumberPreviousValues: PhoneNumberPreviousValuesFieldDetails
      ProductSubscriptionPayload: ProductSubscriptionPayloadFieldDetails
      ProductPreviousValues: ProductPreviousValuesFieldDetails
      ProductRatingSubscriptionPayload: ProductRatingSubscriptionPayloadFieldDetails
      ProductRatingPreviousValues: ProductRatingPreviousValuesFieldDetails
      ReviewSubscriptionPayload: ReviewSubscriptionPayloadFieldDetails
      ReviewPreviousValues: ReviewPreviousValuesFieldDetails
      ProductPhotoSubscriptionPayload: ProductPhotoSubscriptionPayloadFieldDetails
      ProductPhotoPreviousValues: ProductPhotoPreviousValuesFieldDetails
      UserPhotoSubscriptionPayload: UserPhotoSubscriptionPayloadFieldDetails
      UserPhotoPreviousValues: UserPhotoPreviousValuesFieldDetails
    }
  };
  inputTypes: {
    fields: {
      UserWhereUniqueInput: UserWhereUniqueInputInputObject
      PhoneNumberWhereInput: PhoneNumberWhereInputInputObject
      UserWhereInput: UserWhereInputInputObject
      ReviewWhereInput: ReviewWhereInputInputObject
      ProductWhereInput: ProductWhereInputInputObject
      ProductRatingWhereInput: ProductRatingWhereInputInputObject
      ProductPhotoWhereInput: ProductPhotoWhereInputInputObject
      UserPhotoWhereInput: UserPhotoWhereInputInputObject
      ProductWhereUniqueInput: ProductWhereUniqueInputInputObject
      ReviewWhereUniqueInput: ReviewWhereUniqueInputInputObject
      ProductPhotoWhereUniqueInput: ProductPhotoWhereUniqueInputInputObject
      UserPhotoWhereUniqueInput: UserPhotoWhereUniqueInputInputObject
      UserCreateInput: UserCreateInputInputObject
      PhoneNumberCreateManyWithoutUserInput: PhoneNumberCreateManyWithoutUserInputInputObject
      PhoneNumberCreateWithoutUserInput: PhoneNumberCreateWithoutUserInputInputObject
      ReviewCreateManyWithoutUserInput: ReviewCreateManyWithoutUserInputInputObject
      ReviewCreateWithoutUserInput: ReviewCreateWithoutUserInputInputObject
      ProductCreateOneWithoutAll_reviewsInput: ProductCreateOneWithoutAll_reviewsInputInputObject
      ProductCreateWithoutAll_reviewsInput: ProductCreateWithoutAll_reviewsInputInputObject
      ProductRatingCreateOneInput: ProductRatingCreateOneInputInputObject
      ProductRatingCreateInput: ProductRatingCreateInputInputObject
      ProductPhotoCreateManyWithoutProductInput: ProductPhotoCreateManyWithoutProductInputInputObject
      ProductPhotoCreateWithoutProductInput: ProductPhotoCreateWithoutProductInputInputObject
      UserPhotoCreateManyWithoutUserInput: UserPhotoCreateManyWithoutUserInputInputObject
      UserPhotoCreateWithoutUserInput: UserPhotoCreateWithoutUserInputInputObject
      UserUpdateInput: UserUpdateInputInputObject
      PhoneNumberUpdateManyWithoutUserInput: PhoneNumberUpdateManyWithoutUserInputInputObject
      PhoneNumberScalarWhereInput: PhoneNumberScalarWhereInputInputObject
      PhoneNumberUpdateManyWithWhereNestedInput: PhoneNumberUpdateManyWithWhereNestedInputInputObject
      PhoneNumberUpdateManyDataInput: PhoneNumberUpdateManyDataInputInputObject
      ReviewUpdateManyWithoutUserInput: ReviewUpdateManyWithoutUserInputInputObject
      ReviewUpdateWithWhereUniqueWithoutUserInput: ReviewUpdateWithWhereUniqueWithoutUserInputInputObject
      ReviewUpdateWithoutUserDataInput: ReviewUpdateWithoutUserDataInputInputObject
      ProductUpdateOneRequiredWithoutAll_reviewsInput: ProductUpdateOneRequiredWithoutAll_reviewsInputInputObject
      ProductUpdateWithoutAll_reviewsDataInput: ProductUpdateWithoutAll_reviewsDataInputInputObject
      ProductRatingUpdateOneRequiredInput: ProductRatingUpdateOneRequiredInputInputObject
      ProductRatingUpdateDataInput: ProductRatingUpdateDataInputInputObject
      ProductRatingUpsertNestedInput: ProductRatingUpsertNestedInputInputObject
      ProductPhotoUpdateManyWithoutProductInput: ProductPhotoUpdateManyWithoutProductInputInputObject
      ProductPhotoUpdateWithWhereUniqueWithoutProductInput: ProductPhotoUpdateWithWhereUniqueWithoutProductInputInputObject
      ProductPhotoUpdateWithoutProductDataInput: ProductPhotoUpdateWithoutProductDataInputInputObject
      ProductPhotoUpsertWithWhereUniqueWithoutProductInput: ProductPhotoUpsertWithWhereUniqueWithoutProductInputInputObject
      ProductPhotoScalarWhereInput: ProductPhotoScalarWhereInputInputObject
      ProductPhotoUpdateManyWithWhereNestedInput: ProductPhotoUpdateManyWithWhereNestedInputInputObject
      ProductPhotoUpdateManyDataInput: ProductPhotoUpdateManyDataInputInputObject
      ProductUpsertWithoutAll_reviewsInput: ProductUpsertWithoutAll_reviewsInputInputObject
      ReviewUpsertWithWhereUniqueWithoutUserInput: ReviewUpsertWithWhereUniqueWithoutUserInputInputObject
      ReviewScalarWhereInput: ReviewScalarWhereInputInputObject
      ReviewUpdateManyWithWhereNestedInput: ReviewUpdateManyWithWhereNestedInputInputObject
      ReviewUpdateManyDataInput: ReviewUpdateManyDataInputInputObject
      UserPhotoUpdateManyWithoutUserInput: UserPhotoUpdateManyWithoutUserInputInputObject
      UserPhotoUpdateWithWhereUniqueWithoutUserInput: UserPhotoUpdateWithWhereUniqueWithoutUserInputInputObject
      UserPhotoUpdateWithoutUserDataInput: UserPhotoUpdateWithoutUserDataInputInputObject
      UserPhotoUpsertWithWhereUniqueWithoutUserInput: UserPhotoUpsertWithWhereUniqueWithoutUserInputInputObject
      UserPhotoScalarWhereInput: UserPhotoScalarWhereInputInputObject
      UserPhotoUpdateManyWithWhereNestedInput: UserPhotoUpdateManyWithWhereNestedInputInputObject
      UserPhotoUpdateManyDataInput: UserPhotoUpdateManyDataInputInputObject
      UserUpdateManyMutationInput: UserUpdateManyMutationInputInputObject
      PhoneNumberCreateInput: PhoneNumberCreateInputInputObject
      UserCreateOneWithoutPhone_numberInput: UserCreateOneWithoutPhone_numberInputInputObject
      UserCreateWithoutPhone_numberInput: UserCreateWithoutPhone_numberInputInputObject
      PhoneNumberUpdateManyMutationInput: PhoneNumberUpdateManyMutationInputInputObject
      ProductCreateInput: ProductCreateInputInputObject
      ReviewCreateManyWithoutProductInput: ReviewCreateManyWithoutProductInputInputObject
      ReviewCreateWithoutProductInput: ReviewCreateWithoutProductInputInputObject
      UserCreateOneWithoutReviewsInput: UserCreateOneWithoutReviewsInputInputObject
      UserCreateWithoutReviewsInput: UserCreateWithoutReviewsInputInputObject
      ProductUpdateInput: ProductUpdateInputInputObject
      ReviewUpdateManyWithoutProductInput: ReviewUpdateManyWithoutProductInputInputObject
      ReviewUpdateWithWhereUniqueWithoutProductInput: ReviewUpdateWithWhereUniqueWithoutProductInputInputObject
      ReviewUpdateWithoutProductDataInput: ReviewUpdateWithoutProductDataInputInputObject
      UserUpdateOneRequiredWithoutReviewsInput: UserUpdateOneRequiredWithoutReviewsInputInputObject
      UserUpdateWithoutReviewsDataInput: UserUpdateWithoutReviewsDataInputInputObject
      UserUpsertWithoutReviewsInput: UserUpsertWithoutReviewsInputInputObject
      ReviewUpsertWithWhereUniqueWithoutProductInput: ReviewUpsertWithWhereUniqueWithoutProductInputInputObject
      ProductUpdateManyMutationInput: ProductUpdateManyMutationInputInputObject
      ProductRatingUpdateManyMutationInput: ProductRatingUpdateManyMutationInputInputObject
      ReviewCreateInput: ReviewCreateInputInputObject
      ReviewUpdateInput: ReviewUpdateInputInputObject
      ReviewUpdateManyMutationInput: ReviewUpdateManyMutationInputInputObject
      ProductPhotoCreateInput: ProductPhotoCreateInputInputObject
      ProductCreateOneWithoutPhotosInput: ProductCreateOneWithoutPhotosInputInputObject
      ProductCreateWithoutPhotosInput: ProductCreateWithoutPhotosInputInputObject
      ProductPhotoUpdateInput: ProductPhotoUpdateInputInputObject
      ProductUpdateOneRequiredWithoutPhotosInput: ProductUpdateOneRequiredWithoutPhotosInputInputObject
      ProductUpdateWithoutPhotosDataInput: ProductUpdateWithoutPhotosDataInputInputObject
      ProductUpsertWithoutPhotosInput: ProductUpsertWithoutPhotosInputInputObject
      ProductPhotoUpdateManyMutationInput: ProductPhotoUpdateManyMutationInputInputObject
      UserPhotoCreateInput: UserPhotoCreateInputInputObject
      UserCreateOneWithoutPhotosInput: UserCreateOneWithoutPhotosInputInputObject
      UserCreateWithoutPhotosInput: UserCreateWithoutPhotosInputInputObject
      UserPhotoUpdateInput: UserPhotoUpdateInputInputObject
      UserUpdateOneRequiredWithoutPhotosInput: UserUpdateOneRequiredWithoutPhotosInputInputObject
      UserUpdateWithoutPhotosDataInput: UserUpdateWithoutPhotosDataInputInputObject
      UserUpsertWithoutPhotosInput: UserUpsertWithoutPhotosInputInputObject
      UserPhotoUpdateManyMutationInput: UserPhotoUpdateManyMutationInputInputObject
      UserSubscriptionWhereInput: UserSubscriptionWhereInputInputObject
      PhoneNumberSubscriptionWhereInput: PhoneNumberSubscriptionWhereInputInputObject
      ProductSubscriptionWhereInput: ProductSubscriptionWhereInputInputObject
      ProductRatingSubscriptionWhereInput: ProductRatingSubscriptionWhereInputInputObject
      ReviewSubscriptionWhereInput: ReviewSubscriptionWhereInputInputObject
      ProductPhotoSubscriptionWhereInput: ProductPhotoSubscriptionWhereInputInputObject
      UserPhotoSubscriptionWhereInput: UserPhotoSubscriptionWhereInputInputObject
    }
  };
  enumTypes: {
    UserType: UserTypeValues,
    PhoneNumberOrderByInput: PhoneNumberOrderByInputValues,
    ReviewOrderByInput: ReviewOrderByInputValues,
    ProductPhotoOrderByInput: ProductPhotoOrderByInputValues,
    UserPhotoOrderByInput: UserPhotoOrderByInputValues,
    UserOrderByInput: UserOrderByInputValues,
    ProductOrderByInput: ProductOrderByInputValues,
    ProductRatingOrderByInput: ProductRatingOrderByInputValues,
    MutationType: MutationTypeValues,
  };
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: "user", args?: QueryUserArgs[] | false, alias?: string  }
  | { name: "users", args?: QueryUsersArgs[] | false, alias?: string  }
  | { name: "usersConnection", args?: QueryUsersConnectionArgs[] | false, alias?: string  }
  | { name: "phoneNumbers", args?: QueryPhoneNumbersArgs[] | false, alias?: string  }
  | { name: "phoneNumbersConnection", args?: QueryPhoneNumbersConnectionArgs[] | false, alias?: string  }
  | { name: "product", args?: QueryProductArgs[] | false, alias?: string  }
  | { name: "products", args?: QueryProductsArgs[] | false, alias?: string  }
  | { name: "productsConnection", args?: QueryProductsConnectionArgs[] | false, alias?: string  }
  | { name: "productRatings", args?: QueryProductRatingsArgs[] | false, alias?: string  }
  | { name: "productRatingsConnection", args?: QueryProductRatingsConnectionArgs[] | false, alias?: string  }
  | { name: "review", args?: QueryReviewArgs[] | false, alias?: string  }
  | { name: "reviews", args?: QueryReviewsArgs[] | false, alias?: string  }
  | { name: "reviewsConnection", args?: QueryReviewsConnectionArgs[] | false, alias?: string  }
  | { name: "productPhoto", args?: QueryProductPhotoArgs[] | false, alias?: string  }
  | { name: "productPhotos", args?: QueryProductPhotosArgs[] | false, alias?: string  }
  | { name: "productPhotosConnection", args?: QueryProductPhotosConnectionArgs[] | false, alias?: string  }
  | { name: "userPhoto", args?: QueryUserPhotoArgs[] | false, alias?: string  }
  | { name: "userPhotos", args?: QueryUserPhotosArgs[] | false, alias?: string  }
  | { name: "userPhotosConnection", args?: QueryUserPhotosConnectionArgs[] | false, alias?: string  };

type QueryFields =
  | "user"
  | "users"
  | "usersConnection"
  | "phoneNumbers"
  | "phoneNumbersConnection"
  | "product"
  | "products"
  | "productsConnection"
  | "productRatings"
  | "productRatingsConnection"
  | "review"
  | "reviews"
  | "reviewsConnection"
  | "productPhoto"
  | "productPhotos"
  | "productPhotosConnection"
  | "userPhoto"
  | "userPhotos"
  | "userPhotosConnection";


type QueryUserArgs =
  | "where";
type QueryUsersArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryUsersConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryPhoneNumbersArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryPhoneNumbersConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductArgs =
  | "where";
type QueryProductsArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductsConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductRatingsArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductRatingsConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryReviewArgs =
  | "where";
type QueryReviewsArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryReviewsConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductPhotoArgs =
  | "where";
type QueryProductPhotosArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryProductPhotosConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryUserPhotoArgs =
  | "where";
type QueryUserPhotosArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type QueryUserPhotosConnectionArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";


export interface QueryFieldDetails {
  user: {
    type: "User"
    args: Record<QueryUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  };
  users: {
    type: "User"
    args: Record<QueryUsersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User[]> | prisma.User[]
  };
  usersConnection: {
    type: "UserConnection"
    args: Record<QueryUsersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserWhereInput | null, orderBy?: prisma.UserOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserConnection> | prisma.UserConnection
  };
  phoneNumbers: {
    type: "PhoneNumber"
    args: Record<QueryPhoneNumbersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PhoneNumberWhereInput | null, orderBy?: prisma.PhoneNumberOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumber[]> | prisma.PhoneNumber[]
  };
  phoneNumbersConnection: {
    type: "PhoneNumberConnection"
    args: Record<QueryPhoneNumbersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PhoneNumberWhereInput | null, orderBy?: prisma.PhoneNumberOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumberConnection> | prisma.PhoneNumberConnection
  };
  product: {
    type: "Product"
    args: Record<QueryProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProductWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product | null> | prisma.Product | null
  };
  products: {
    type: "Product"
    args: Record<QueryProductsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductWhereInput | null, orderBy?: prisma.ProductOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product[]> | prisma.Product[]
  };
  productsConnection: {
    type: "ProductConnection"
    args: Record<QueryProductsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductWhereInput | null, orderBy?: prisma.ProductOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductConnection> | prisma.ProductConnection
  };
  productRatings: {
    type: "ProductRating"
    args: Record<QueryProductRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductRatingWhereInput | null, orderBy?: prisma.ProductRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRating[]> | prisma.ProductRating[]
  };
  productRatingsConnection: {
    type: "ProductRatingConnection"
    args: Record<QueryProductRatingsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductRatingWhereInput | null, orderBy?: prisma.ProductRatingOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRatingConnection> | prisma.ProductRatingConnection
  };
  review: {
    type: "Review"
    args: Record<QueryReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  };
  reviews: {
    type: "Review"
    args: Record<QueryReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  };
  reviewsConnection: {
    type: "ReviewConnection"
    args: Record<QueryReviewsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewConnection> | prisma.ReviewConnection
  };
  productPhoto: {
    type: "ProductPhoto"
    args: Record<QueryProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProductPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto | null> | prisma.ProductPhoto | null
  };
  productPhotos: {
    type: "ProductPhoto"
    args: Record<QueryProductPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductPhotoWhereInput | null, orderBy?: prisma.ProductPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto[]> | prisma.ProductPhoto[]
  };
  productPhotosConnection: {
    type: "ProductPhotoConnection"
    args: Record<QueryProductPhotosConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductPhotoWhereInput | null, orderBy?: prisma.ProductPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhotoConnection> | prisma.ProductPhotoConnection
  };
  userPhoto: {
    type: "UserPhoto"
    args: Record<QueryUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: UserPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto | null> | prisma.UserPhoto | null
  };
  userPhotos: {
    type: "UserPhoto"
    args: Record<QueryUserPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserPhotoWhereInput | null, orderBy?: prisma.UserPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto[]> | prisma.UserPhoto[]
  };
  userPhotosConnection: {
    type: "UserPhotoConnection"
    args: Record<QueryUserPhotosConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: UserPhotoWhereInput | null, orderBy?: prisma.UserPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhotoConnection> | prisma.UserPhotoConnection
  };
}


// Types for User

type UserObject =
  | UserFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "email", args?: [] | false, alias?: string  }
  | { name: "name", args?: [] | false, alias?: string  }
  | { name: "phone_number", args?: UserPhone_numberArgs[] | false, alias?: string  }
  | { name: "user_type", args?: [] | false, alias?: string  }
  | { name: "reviews", args?: UserReviewsArgs[] | false, alias?: string  }
  | { name: "photos", args?: UserPhotosArgs[] | false, alias?: string  }
  | { name: "uid", args?: [] | false, alias?: string  };

type UserFields =
  | "id"
  | "email"
  | "name"
  | "phone_number"
  | "user_type"
  | "reviews"
  | "photos"
  | "uid";


type UserPhone_numberArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type UserReviewsArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type UserPhotosArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";


export interface UserFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  email: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
  name: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  phone_number: {
    type: "PhoneNumber"
    args: Record<UserPhone_numberArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: PhoneNumberWhereInput | null, orderBy?: prisma.PhoneNumberOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumber[]> | prisma.PhoneNumber[]
  };
  user_type: {
    type: "UserType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserType> | prisma.UserType
  };
  reviews: {
    type: "Review"
    args: Record<UserReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  };
  photos: {
    type: "UserPhoto"
    args: Record<UserPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"User">,
      args: { where?: UserPhotoWhereInput | null, orderBy?: prisma.UserPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto[]> | prisma.UserPhoto[]
  };
  uid: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for PhoneNumber

type PhoneNumberObject =
  | PhoneNumberFields
  | { name: "user", args?: [] | false, alias?: string  }
  | { name: "code", args?: [] | false, alias?: string  }
  | { name: "phone", args?: [] | false, alias?: string  };

type PhoneNumberFields =
  | "user"
  | "code"
  | "phone";





export interface PhoneNumberFieldDetails {
  user: {
    type: "User"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumber">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  code: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  phone: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for Review

type ReviewObject =
  | ReviewFields
  | { name: "user", args?: [] | false, alias?: string  }
  | { name: "product", args?: [] | false, alias?: string  }
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "rating", args?: [] | false, alias?: string  }
  | { name: "review_text", args?: [] | false, alias?: string  }
  | { name: "review_time_friendly", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  };

type ReviewFields =
  | "user"
  | "product"
  | "id"
  | "rating"
  | "review_text"
  | "review_time_friendly"
  | "timestamp";





export interface ReviewFieldDetails {
  user: {
    type: "User"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  product: {
    type: "Product"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Review">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product> | prisma.Product
  };
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  rating: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  review_text: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  review_time_friendly: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for Product

type ProductObject =
  | ProductFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "name", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb", args?: [] | false, alias?: string  }
  | { name: "featured_image", args?: [] | false, alias?: string  }
  | { name: "photos_url", args?: [] | false, alias?: string  }
  | { name: "user_rating", args?: [] | false, alias?: string  }
  | { name: "has_online_delivery", args?: [] | false, alias?: string  }
  | { name: "is_delivering_now", args?: [] | false, alias?: string  }
  | { name: "deeplink", args?: [] | false, alias?: string  }
  | { name: "photo_count", args?: [] | false, alias?: string  }
  | { name: "photos", args?: ProductPhotosArgs[] | false, alias?: string  }
  | { name: "all_reviews", args?: ProductAll_reviewsArgs[] | false, alias?: string  };

type ProductFields =
  | "id"
  | "name"
  | "url"
  | "thumb"
  | "featured_image"
  | "photos_url"
  | "user_rating"
  | "has_online_delivery"
  | "is_delivering_now"
  | "deeplink"
  | "photo_count"
  | "photos"
  | "all_reviews";


type ProductPhotosArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";
type ProductAll_reviewsArgs =
  | "where"
  | "orderBy"
  | "skip"
  | "after"
  | "before"
  | "first"
  | "last";


export interface ProductFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  name: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  featured_image: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  photos_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  user_rating: {
    type: "ProductRating"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Product">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRating> | prisma.ProductRating
  };
  has_online_delivery: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  is_delivering_now: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  deeplink: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
  photo_count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  photos: {
    type: "ProductPhoto"
    args: Record<ProductPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Product">,
      args: { where?: ProductPhotoWhereInput | null, orderBy?: prisma.ProductPhotoOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto[]> | prisma.ProductPhoto[]
  };
  all_reviews: {
    type: "Review"
    args: Record<ProductAll_reviewsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Product">,
      args: { where?: ReviewWhereInput | null, orderBy?: prisma.ReviewOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review[]> | prisma.Review[]
  };
}


// Types for ProductRating

type ProductRatingObject =
  | ProductRatingFields
  | { name: "aggregate_rating", args?: [] | false, alias?: string  }
  | { name: "votes", args?: [] | false, alias?: string  };

type ProductRatingFields =
  | "aggregate_rating"
  | "votes";





export interface ProductRatingFieldDetails {
  aggregate_rating: {
    type: "Float"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  votes: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductPhoto

type ProductPhotoObject =
  | ProductPhotoFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "product", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb_url", args?: [] | false, alias?: string  }
  | { name: "caption", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  }
  | { name: "friendly_time", args?: [] | false, alias?: string  }
  | { name: "width", args?: [] | false, alias?: string  }
  | { name: "height", args?: [] | false, alias?: string  };

type ProductPhotoFields =
  | "id"
  | "product"
  | "url"
  | "thumb_url"
  | "caption"
  | "timestamp"
  | "friendly_time"
  | "width"
  | "height";





export interface ProductPhotoFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  product: {
    type: "Product"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhoto">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product> | prisma.Product
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  caption: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  friendly_time: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  width: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  height: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for UserPhoto

type UserPhotoObject =
  | UserPhotoFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "user", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb_url", args?: [] | false, alias?: string  }
  | { name: "caption", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  }
  | { name: "friendly_time", args?: [] | false, alias?: string  }
  | { name: "width", args?: [] | false, alias?: string  }
  | { name: "height", args?: [] | false, alias?: string  };

type UserPhotoFields =
  | "id"
  | "user"
  | "url"
  | "thumb_url"
  | "caption"
  | "timestamp"
  | "friendly_time"
  | "width"
  | "height";





export interface UserPhotoFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  user: {
    type: "User"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhoto">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  caption: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  friendly_time: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  width: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  height: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for UserConnection

type UserConnectionObject =
  | UserConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type UserConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface UserConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "UserEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserEdge[]> | prisma.UserEdge[]
  };
  aggregate: {
    type: "AggregateUser"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUser> | prisma.AggregateUser
  };
}


// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: "hasNextPage", args?: [] | false, alias?: string  }
  | { name: "hasPreviousPage", args?: [] | false, alias?: string  }
  | { name: "startCursor", args?: [] | false, alias?: string  }
  | { name: "endCursor", args?: [] | false, alias?: string  };

type PageInfoFields =
  | "hasNextPage"
  | "hasPreviousPage"
  | "startCursor"
  | "endCursor";





export interface PageInfoFieldDetails {
  hasNextPage: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  hasPreviousPage: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  startCursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
  endCursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
}


// Types for UserEdge

type UserEdgeObject =
  | UserEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type UserEdgeFields =
  | "node"
  | "cursor";





export interface UserEdgeFieldDetails {
  node: {
    type: "User"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateUser

type AggregateUserObject =
  | AggregateUserFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateUserFields =
  | "count";





export interface AggregateUserFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for PhoneNumberConnection

type PhoneNumberConnectionObject =
  | PhoneNumberConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type PhoneNumberConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface PhoneNumberConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumberConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "PhoneNumberEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumberConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumberEdge[]> | prisma.PhoneNumberEdge[]
  };
  aggregate: {
    type: "AggregatePhoneNumber"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumberConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePhoneNumber> | prisma.AggregatePhoneNumber
  };
}


// Types for PhoneNumberEdge

type PhoneNumberEdgeObject =
  | PhoneNumberEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type PhoneNumberEdgeFields =
  | "node"
  | "cursor";





export interface PhoneNumberEdgeFieldDetails {
  node: {
    type: "PhoneNumber"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumberEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumber> | prisma.PhoneNumber
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregatePhoneNumber

type AggregatePhoneNumberObject =
  | AggregatePhoneNumberFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregatePhoneNumberFields =
  | "count";





export interface AggregatePhoneNumberFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductConnection

type ProductConnectionObject =
  | ProductConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type ProductConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface ProductConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "ProductEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductEdge[]> | prisma.ProductEdge[]
  };
  aggregate: {
    type: "AggregateProduct"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProduct> | prisma.AggregateProduct
  };
}


// Types for ProductEdge

type ProductEdgeObject =
  | ProductEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type ProductEdgeFields =
  | "node"
  | "cursor";





export interface ProductEdgeFieldDetails {
  node: {
    type: "Product"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product> | prisma.Product
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateProduct

type AggregateProductObject =
  | AggregateProductFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateProductFields =
  | "count";





export interface AggregateProductFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductRatingConnection

type ProductRatingConnectionObject =
  | ProductRatingConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type ProductRatingConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface ProductRatingConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "ProductRatingEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRatingEdge[]> | prisma.ProductRatingEdge[]
  };
  aggregate: {
    type: "AggregateProductRating"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductRatingConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProductRating> | prisma.AggregateProductRating
  };
}


// Types for ProductRatingEdge

type ProductRatingEdgeObject =
  | ProductRatingEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type ProductRatingEdgeFields =
  | "node"
  | "cursor";





export interface ProductRatingEdgeFieldDetails {
  node: {
    type: "ProductRating"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductRatingEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRating> | prisma.ProductRating
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateProductRating

type AggregateProductRatingObject =
  | AggregateProductRatingFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateProductRatingFields =
  | "count";





export interface AggregateProductRatingFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ReviewConnection

type ReviewConnectionObject =
  | ReviewConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type ReviewConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface ReviewConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "ReviewEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewEdge[]> | prisma.ReviewEdge[]
  };
  aggregate: {
    type: "AggregateReview"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateReview> | prisma.AggregateReview
  };
}


// Types for ReviewEdge

type ReviewEdgeObject =
  | ReviewEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type ReviewEdgeFields =
  | "node"
  | "cursor";





export interface ReviewEdgeFieldDetails {
  node: {
    type: "Review"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateReview

type AggregateReviewObject =
  | AggregateReviewFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateReviewFields =
  | "count";





export interface AggregateReviewFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductPhotoConnection

type ProductPhotoConnectionObject =
  | ProductPhotoConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type ProductPhotoConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface ProductPhotoConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "ProductPhotoEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhotoEdge[]> | prisma.ProductPhotoEdge[]
  };
  aggregate: {
    type: "AggregateProductPhoto"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProductPhoto> | prisma.AggregateProductPhoto
  };
}


// Types for ProductPhotoEdge

type ProductPhotoEdgeObject =
  | ProductPhotoEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type ProductPhotoEdgeFields =
  | "node"
  | "cursor";





export interface ProductPhotoEdgeFieldDetails {
  node: {
    type: "ProductPhoto"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhotoEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto> | prisma.ProductPhoto
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateProductPhoto

type AggregateProductPhotoObject =
  | AggregateProductPhotoFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateProductPhotoFields =
  | "count";





export interface AggregateProductPhotoFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for UserPhotoConnection

type UserPhotoConnectionObject =
  | UserPhotoConnectionFields
  | { name: "pageInfo", args?: [] | false, alias?: string  }
  | { name: "edges", args?: [] | false, alias?: string  }
  | { name: "aggregate", args?: [] | false, alias?: string  };

type UserPhotoConnectionFields =
  | "pageInfo"
  | "edges"
  | "aggregate";





export interface UserPhotoConnectionFieldDetails {
  pageInfo: {
    type: "PageInfo"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  };
  edges: {
    type: "UserPhotoEdge"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhotoEdge[]> | prisma.UserPhotoEdge[]
  };
  aggregate: {
    type: "AggregateUserPhoto"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhotoConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateUserPhoto> | prisma.AggregateUserPhoto
  };
}


// Types for UserPhotoEdge

type UserPhotoEdgeObject =
  | UserPhotoEdgeFields
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "cursor", args?: [] | false, alias?: string  };

type UserPhotoEdgeFields =
  | "node"
  | "cursor";





export interface UserPhotoEdgeFieldDetails {
  node: {
    type: "UserPhoto"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhotoEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto> | prisma.UserPhoto
  };
  cursor: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for AggregateUserPhoto

type AggregateUserPhotoObject =
  | AggregateUserPhotoFields
  | { name: "count", args?: [] | false, alias?: string  };

type AggregateUserPhotoFields =
  | "count";





export interface AggregateUserPhotoFieldDetails {
  count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: "createUser", args?: MutationCreateUserArgs[] | false, alias?: string  }
  | { name: "updateUser", args?: MutationUpdateUserArgs[] | false, alias?: string  }
  | { name: "updateManyUsers", args?: MutationUpdateManyUsersArgs[] | false, alias?: string  }
  | { name: "upsertUser", args?: MutationUpsertUserArgs[] | false, alias?: string  }
  | { name: "deleteUser", args?: MutationDeleteUserArgs[] | false, alias?: string  }
  | { name: "deleteManyUsers", args?: MutationDeleteManyUsersArgs[] | false, alias?: string  }
  | { name: "createPhoneNumber", args?: MutationCreatePhoneNumberArgs[] | false, alias?: string  }
  | { name: "updateManyPhoneNumbers", args?: MutationUpdateManyPhoneNumbersArgs[] | false, alias?: string  }
  | { name: "deleteManyPhoneNumbers", args?: MutationDeleteManyPhoneNumbersArgs[] | false, alias?: string  }
  | { name: "createProduct", args?: MutationCreateProductArgs[] | false, alias?: string  }
  | { name: "updateProduct", args?: MutationUpdateProductArgs[] | false, alias?: string  }
  | { name: "updateManyProducts", args?: MutationUpdateManyProductsArgs[] | false, alias?: string  }
  | { name: "upsertProduct", args?: MutationUpsertProductArgs[] | false, alias?: string  }
  | { name: "deleteProduct", args?: MutationDeleteProductArgs[] | false, alias?: string  }
  | { name: "deleteManyProducts", args?: MutationDeleteManyProductsArgs[] | false, alias?: string  }
  | { name: "createProductRating", args?: MutationCreateProductRatingArgs[] | false, alias?: string  }
  | { name: "updateManyProductRatings", args?: MutationUpdateManyProductRatingsArgs[] | false, alias?: string  }
  | { name: "deleteManyProductRatings", args?: MutationDeleteManyProductRatingsArgs[] | false, alias?: string  }
  | { name: "createReview", args?: MutationCreateReviewArgs[] | false, alias?: string  }
  | { name: "updateReview", args?: MutationUpdateReviewArgs[] | false, alias?: string  }
  | { name: "updateManyReviews", args?: MutationUpdateManyReviewsArgs[] | false, alias?: string  }
  | { name: "upsertReview", args?: MutationUpsertReviewArgs[] | false, alias?: string  }
  | { name: "deleteReview", args?: MutationDeleteReviewArgs[] | false, alias?: string  }
  | { name: "deleteManyReviews", args?: MutationDeleteManyReviewsArgs[] | false, alias?: string  }
  | { name: "createProductPhoto", args?: MutationCreateProductPhotoArgs[] | false, alias?: string  }
  | { name: "updateProductPhoto", args?: MutationUpdateProductPhotoArgs[] | false, alias?: string  }
  | { name: "updateManyProductPhotos", args?: MutationUpdateManyProductPhotosArgs[] | false, alias?: string  }
  | { name: "upsertProductPhoto", args?: MutationUpsertProductPhotoArgs[] | false, alias?: string  }
  | { name: "deleteProductPhoto", args?: MutationDeleteProductPhotoArgs[] | false, alias?: string  }
  | { name: "deleteManyProductPhotos", args?: MutationDeleteManyProductPhotosArgs[] | false, alias?: string  }
  | { name: "createUserPhoto", args?: MutationCreateUserPhotoArgs[] | false, alias?: string  }
  | { name: "updateUserPhoto", args?: MutationUpdateUserPhotoArgs[] | false, alias?: string  }
  | { name: "updateManyUserPhotos", args?: MutationUpdateManyUserPhotosArgs[] | false, alias?: string  }
  | { name: "upsertUserPhoto", args?: MutationUpsertUserPhotoArgs[] | false, alias?: string  }
  | { name: "deleteUserPhoto", args?: MutationDeleteUserPhotoArgs[] | false, alias?: string  }
  | { name: "deleteManyUserPhotos", args?: MutationDeleteManyUserPhotosArgs[] | false, alias?: string  };

type MutationFields =
  | "createUser"
  | "updateUser"
  | "updateManyUsers"
  | "upsertUser"
  | "deleteUser"
  | "deleteManyUsers"
  | "createPhoneNumber"
  | "updateManyPhoneNumbers"
  | "deleteManyPhoneNumbers"
  | "createProduct"
  | "updateProduct"
  | "updateManyProducts"
  | "upsertProduct"
  | "deleteProduct"
  | "deleteManyProducts"
  | "createProductRating"
  | "updateManyProductRatings"
  | "deleteManyProductRatings"
  | "createReview"
  | "updateReview"
  | "updateManyReviews"
  | "upsertReview"
  | "deleteReview"
  | "deleteManyReviews"
  | "createProductPhoto"
  | "updateProductPhoto"
  | "updateManyProductPhotos"
  | "upsertProductPhoto"
  | "deleteProductPhoto"
  | "deleteManyProductPhotos"
  | "createUserPhoto"
  | "updateUserPhoto"
  | "updateManyUserPhotos"
  | "upsertUserPhoto"
  | "deleteUserPhoto"
  | "deleteManyUserPhotos";


type MutationCreateUserArgs =
  | "data";
type MutationUpdateUserArgs =
  | "data"
  | "where";
type MutationUpdateManyUsersArgs =
  | "data"
  | "where";
type MutationUpsertUserArgs =
  | "where"
  | "create"
  | "update";
type MutationDeleteUserArgs =
  | "where";
type MutationDeleteManyUsersArgs =
  | "where";
type MutationCreatePhoneNumberArgs =
  | "data";
type MutationUpdateManyPhoneNumbersArgs =
  | "data"
  | "where";
type MutationDeleteManyPhoneNumbersArgs =
  | "where";
type MutationCreateProductArgs =
  | "data";
type MutationUpdateProductArgs =
  | "data"
  | "where";
type MutationUpdateManyProductsArgs =
  | "data"
  | "where";
type MutationUpsertProductArgs =
  | "where"
  | "create"
  | "update";
type MutationDeleteProductArgs =
  | "where";
type MutationDeleteManyProductsArgs =
  | "where";
type MutationCreateProductRatingArgs =
  | "data";
type MutationUpdateManyProductRatingsArgs =
  | "data"
  | "where";
type MutationDeleteManyProductRatingsArgs =
  | "where";
type MutationCreateReviewArgs =
  | "data";
type MutationUpdateReviewArgs =
  | "data"
  | "where";
type MutationUpdateManyReviewsArgs =
  | "data"
  | "where";
type MutationUpsertReviewArgs =
  | "where"
  | "create"
  | "update";
type MutationDeleteReviewArgs =
  | "where";
type MutationDeleteManyReviewsArgs =
  | "where";
type MutationCreateProductPhotoArgs =
  | "data";
type MutationUpdateProductPhotoArgs =
  | "data"
  | "where";
type MutationUpdateManyProductPhotosArgs =
  | "data"
  | "where";
type MutationUpsertProductPhotoArgs =
  | "where"
  | "create"
  | "update";
type MutationDeleteProductPhotoArgs =
  | "where";
type MutationDeleteManyProductPhotosArgs =
  | "where";
type MutationCreateUserPhotoArgs =
  | "data";
type MutationUpdateUserPhotoArgs =
  | "data"
  | "where";
type MutationUpdateManyUserPhotosArgs =
  | "data"
  | "where";
type MutationUpsertUserPhotoArgs =
  | "where"
  | "create"
  | "update";
type MutationDeleteUserPhotoArgs =
  | "where";
type MutationDeleteManyUserPhotosArgs =
  | "where";


export interface MutationFieldDetails {
  createUser: {
    type: "User"
    args: Record<MutationCreateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  updateUser: {
    type: "User"
    args: Record<MutationUpdateUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateInput, where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  };
  updateManyUsers: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserUpdateManyMutationInput, where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  upsertUser: {
    type: "User"
    args: Record<MutationUpsertUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput, create: UserCreateInput, update: UserUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User> | prisma.User
  };
  deleteUser: {
    type: "User"
    args: Record<MutationDeleteUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  };
  deleteManyUsers: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyUsersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createPhoneNumber: {
    type: "PhoneNumber"
    args: Record<MutationCreatePhoneNumberArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PhoneNumberCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumber> | prisma.PhoneNumber
  };
  updateManyPhoneNumbers: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyPhoneNumbersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PhoneNumberUpdateManyMutationInput, where?: PhoneNumberWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  deleteManyPhoneNumbers: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyPhoneNumbersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PhoneNumberWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createProduct: {
    type: "Product"
    args: Record<MutationCreateProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product> | prisma.Product
  };
  updateProduct: {
    type: "Product"
    args: Record<MutationUpdateProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductUpdateInput, where: ProductWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product | null> | prisma.Product | null
  };
  updateManyProducts: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductUpdateManyMutationInput, where?: ProductWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  upsertProduct: {
    type: "Product"
    args: Record<MutationUpsertProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductWhereUniqueInput, create: ProductCreateInput, update: ProductUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product> | prisma.Product
  };
  deleteProduct: {
    type: "Product"
    args: Record<MutationDeleteProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product | null> | prisma.Product | null
  };
  deleteManyProducts: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProductWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createProductRating: {
    type: "ProductRating"
    args: Record<MutationCreateProductRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductRatingCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRating> | prisma.ProductRating
  };
  updateManyProductRatings: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyProductRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductRatingUpdateManyMutationInput, where?: ProductRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  deleteManyProductRatings: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyProductRatingsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProductRatingWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createReview: {
    type: "Review"
    args: Record<MutationCreateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  };
  updateReview: {
    type: "Review"
    args: Record<MutationUpdateReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateInput, where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  };
  updateManyReviews: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ReviewUpdateManyMutationInput, where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  upsertReview: {
    type: "Review"
    args: Record<MutationUpsertReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput, create: ReviewCreateInput, update: ReviewUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review> | prisma.Review
  };
  deleteReview: {
    type: "Review"
    args: Record<MutationDeleteReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ReviewWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  };
  deleteManyReviews: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyReviewsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ReviewWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createProductPhoto: {
    type: "ProductPhoto"
    args: Record<MutationCreateProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductPhotoCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto> | prisma.ProductPhoto
  };
  updateProductPhoto: {
    type: "ProductPhoto"
    args: Record<MutationUpdateProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductPhotoUpdateInput, where: ProductPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto | null> | prisma.ProductPhoto | null
  };
  updateManyProductPhotos: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyProductPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductPhotoUpdateManyMutationInput, where?: ProductPhotoWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  upsertProductPhoto: {
    type: "ProductPhoto"
    args: Record<MutationUpsertProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductPhotoWhereUniqueInput, create: ProductPhotoCreateInput, update: ProductPhotoUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto> | prisma.ProductPhoto
  };
  deleteProductPhoto: {
    type: "ProductPhoto"
    args: Record<MutationDeleteProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto | null> | prisma.ProductPhoto | null
  };
  deleteManyProductPhotos: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyProductPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProductPhotoWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  createUserPhoto: {
    type: "UserPhoto"
    args: Record<MutationCreateUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserPhotoCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto> | prisma.UserPhoto
  };
  updateUserPhoto: {
    type: "UserPhoto"
    args: Record<MutationUpdateUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserPhotoUpdateInput, where: UserPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto | null> | prisma.UserPhoto | null
  };
  updateManyUserPhotos: {
    type: "BatchPayload"
    args: Record<MutationUpdateManyUserPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: UserPhotoUpdateManyMutationInput, where?: UserPhotoWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
  upsertUserPhoto: {
    type: "UserPhoto"
    args: Record<MutationUpsertUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserPhotoWhereUniqueInput, create: UserPhotoCreateInput, update: UserPhotoUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto> | prisma.UserPhoto
  };
  deleteUserPhoto: {
    type: "UserPhoto"
    args: Record<MutationDeleteUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: UserPhotoWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto | null> | prisma.UserPhoto | null
  };
  deleteManyUserPhotos: {
    type: "BatchPayload"
    args: Record<MutationDeleteManyUserPhotosArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: UserPhotoWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  };
}


// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: "count", args?: [] | false, alias?: string  };

type BatchPayloadFields =
  | "count";





export interface BatchPayloadFieldDetails {
  count: {
    type: "Long"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: "user", args?: SubscriptionUserArgs[] | false, alias?: string  }
  | { name: "phoneNumber", args?: SubscriptionPhoneNumberArgs[] | false, alias?: string  }
  | { name: "product", args?: SubscriptionProductArgs[] | false, alias?: string  }
  | { name: "productRating", args?: SubscriptionProductRatingArgs[] | false, alias?: string  }
  | { name: "review", args?: SubscriptionReviewArgs[] | false, alias?: string  }
  | { name: "productPhoto", args?: SubscriptionProductPhotoArgs[] | false, alias?: string  }
  | { name: "userPhoto", args?: SubscriptionUserPhotoArgs[] | false, alias?: string  };

type SubscriptionFields =
  | "user"
  | "phoneNumber"
  | "product"
  | "productRating"
  | "review"
  | "productPhoto"
  | "userPhoto";


type SubscriptionUserArgs =
  | "where";
type SubscriptionPhoneNumberArgs =
  | "where";
type SubscriptionProductArgs =
  | "where";
type SubscriptionProductRatingArgs =
  | "where";
type SubscriptionReviewArgs =
  | "where";
type SubscriptionProductPhotoArgs =
  | "where";
type SubscriptionUserPhotoArgs =
  | "where";


export interface SubscriptionFieldDetails {
  user: {
    type: "UserSubscriptionPayload"
    args: Record<SubscriptionUserArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserSubscriptionPayload | null> | prisma.UserSubscriptionPayload | null
  };
  phoneNumber: {
    type: "PhoneNumberSubscriptionPayload"
    args: Record<SubscriptionPhoneNumberArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PhoneNumberSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumberSubscriptionPayload | null> | prisma.PhoneNumberSubscriptionPayload | null
  };
  product: {
    type: "ProductSubscriptionPayload"
    args: Record<SubscriptionProductArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProductSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductSubscriptionPayload | null> | prisma.ProductSubscriptionPayload | null
  };
  productRating: {
    type: "ProductRatingSubscriptionPayload"
    args: Record<SubscriptionProductRatingArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProductRatingSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRatingSubscriptionPayload | null> | prisma.ProductRatingSubscriptionPayload | null
  };
  review: {
    type: "ReviewSubscriptionPayload"
    args: Record<SubscriptionReviewArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ReviewSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewSubscriptionPayload | null> | prisma.ReviewSubscriptionPayload | null
  };
  productPhoto: {
    type: "ProductPhotoSubscriptionPayload"
    args: Record<SubscriptionProductPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProductPhotoSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhotoSubscriptionPayload | null> | prisma.ProductPhotoSubscriptionPayload | null
  };
  userPhoto: {
    type: "UserPhotoSubscriptionPayload"
    args: Record<SubscriptionUserPhotoArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: UserPhotoSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhotoSubscriptionPayload | null> | prisma.UserPhotoSubscriptionPayload | null
  };
}


// Types for UserSubscriptionPayload

type UserSubscriptionPayloadObject =
  | UserSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type UserSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface UserSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "User"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.User | null> | prisma.User | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "UserPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPreviousValues | null> | prisma.UserPreviousValues | null
  };
}


// Types for UserPreviousValues

type UserPreviousValuesObject =
  | UserPreviousValuesFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "email", args?: [] | false, alias?: string  }
  | { name: "name", args?: [] | false, alias?: string  }
  | { name: "user_type", args?: [] | false, alias?: string  }
  | { name: "uid", args?: [] | false, alias?: string  };

type UserPreviousValuesFields =
  | "id"
  | "email"
  | "name"
  | "user_type"
  | "uid";





export interface UserPreviousValuesFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  email: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
  name: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  user_type: {
    type: "UserType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPreviousValues">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserType> | prisma.UserType
  };
  uid: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for PhoneNumberSubscriptionPayload

type PhoneNumberSubscriptionPayloadObject =
  | PhoneNumberSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type PhoneNumberSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface PhoneNumberSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PhoneNumberSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "PhoneNumber"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PhoneNumberSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumber | null> | prisma.PhoneNumber | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "PhoneNumberPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PhoneNumberSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PhoneNumberPreviousValues | null> | prisma.PhoneNumberPreviousValues | null
  };
}


// Types for PhoneNumberPreviousValues

type PhoneNumberPreviousValuesObject =
  | PhoneNumberPreviousValuesFields
  | { name: "code", args?: [] | false, alias?: string  }
  | { name: "phone", args?: [] | false, alias?: string  };

type PhoneNumberPreviousValuesFields =
  | "code"
  | "phone";





export interface PhoneNumberPreviousValuesFieldDetails {
  code: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  phone: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductSubscriptionPayload

type ProductSubscriptionPayloadObject =
  | ProductSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type ProductSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface ProductSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "Product"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Product | null> | prisma.Product | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "ProductPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPreviousValues | null> | prisma.ProductPreviousValues | null
  };
}


// Types for ProductPreviousValues

type ProductPreviousValuesObject =
  | ProductPreviousValuesFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "name", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb", args?: [] | false, alias?: string  }
  | { name: "featured_image", args?: [] | false, alias?: string  }
  | { name: "photos_url", args?: [] | false, alias?: string  }
  | { name: "has_online_delivery", args?: [] | false, alias?: string  }
  | { name: "is_delivering_now", args?: [] | false, alias?: string  }
  | { name: "deeplink", args?: [] | false, alias?: string  }
  | { name: "photo_count", args?: [] | false, alias?: string  };

type ProductPreviousValuesFields =
  | "id"
  | "name"
  | "url"
  | "thumb"
  | "featured_image"
  | "photos_url"
  | "has_online_delivery"
  | "is_delivering_now"
  | "deeplink"
  | "photo_count";





export interface ProductPreviousValuesFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  name: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  featured_image: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  photos_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  has_online_delivery: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  is_delivering_now: {
    type: "Boolean"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  deeplink: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  };
  photo_count: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductRatingSubscriptionPayload

type ProductRatingSubscriptionPayloadObject =
  | ProductRatingSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type ProductRatingSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface ProductRatingSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "ProductRating"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRating | null> | prisma.ProductRating | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "ProductRatingPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductRatingSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductRatingPreviousValues | null> | prisma.ProductRatingPreviousValues | null
  };
}


// Types for ProductRatingPreviousValues

type ProductRatingPreviousValuesObject =
  | ProductRatingPreviousValuesFields
  | { name: "aggregate_rating", args?: [] | false, alias?: string  }
  | { name: "votes", args?: [] | false, alias?: string  };

type ProductRatingPreviousValuesFields =
  | "aggregate_rating"
  | "votes";





export interface ProductRatingPreviousValuesFieldDetails {
  aggregate_rating: {
    type: "Float"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  votes: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ReviewSubscriptionPayload

type ReviewSubscriptionPayloadObject =
  | ReviewSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type ReviewSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface ReviewSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "Review"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Review | null> | prisma.Review | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "ReviewPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ReviewSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ReviewPreviousValues | null> | prisma.ReviewPreviousValues | null
  };
}


// Types for ReviewPreviousValues

type ReviewPreviousValuesObject =
  | ReviewPreviousValuesFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "rating", args?: [] | false, alias?: string  }
  | { name: "review_text", args?: [] | false, alias?: string  }
  | { name: "review_time_friendly", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  };

type ReviewPreviousValuesFields =
  | "id"
  | "rating"
  | "review_text"
  | "review_time_friendly"
  | "timestamp";





export interface ReviewPreviousValuesFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  rating: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  review_text: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  review_time_friendly: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for ProductPhotoSubscriptionPayload

type ProductPhotoSubscriptionPayloadObject =
  | ProductPhotoSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type ProductPhotoSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface ProductPhotoSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "ProductPhoto"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhoto | null> | prisma.ProductPhoto | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "ProductPhotoPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductPhotoPreviousValues | null> | prisma.ProductPhotoPreviousValues | null
  };
}


// Types for ProductPhotoPreviousValues

type ProductPhotoPreviousValuesObject =
  | ProductPhotoPreviousValuesFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb_url", args?: [] | false, alias?: string  }
  | { name: "caption", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  }
  | { name: "friendly_time", args?: [] | false, alias?: string  }
  | { name: "width", args?: [] | false, alias?: string  }
  | { name: "height", args?: [] | false, alias?: string  };

type ProductPhotoPreviousValuesFields =
  | "id"
  | "url"
  | "thumb_url"
  | "caption"
  | "timestamp"
  | "friendly_time"
  | "width"
  | "height";





export interface ProductPhotoPreviousValuesFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  caption: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  friendly_time: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  width: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  height: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}


// Types for UserPhotoSubscriptionPayload

type UserPhotoSubscriptionPayloadObject =
  | UserPhotoSubscriptionPayloadFields
  | { name: "mutation", args?: [] | false, alias?: string  }
  | { name: "node", args?: [] | false, alias?: string  }
  | { name: "updatedFields", args?: [] | false, alias?: string  }
  | { name: "previousValues", args?: [] | false, alias?: string  };

type UserPhotoSubscriptionPayloadFields =
  | "mutation"
  | "node"
  | "updatedFields"
  | "previousValues";





export interface UserPhotoSubscriptionPayloadFieldDetails {
  mutation: {
    type: "MutationType"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"UserPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  };
  node: {
    type: "UserPhoto"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhoto | null> | prisma.UserPhoto | null
  };
  updatedFields: {
    type: "String"
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  };
  previousValues: {
    type: "UserPhotoPreviousValues"
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"UserPhotoSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.UserPhotoPreviousValues | null> | prisma.UserPhotoPreviousValues | null
  };
}


// Types for UserPhotoPreviousValues

type UserPhotoPreviousValuesObject =
  | UserPhotoPreviousValuesFields
  | { name: "id", args?: [] | false, alias?: string  }
  | { name: "url", args?: [] | false, alias?: string  }
  | { name: "thumb_url", args?: [] | false, alias?: string  }
  | { name: "caption", args?: [] | false, alias?: string  }
  | { name: "timestamp", args?: [] | false, alias?: string  }
  | { name: "friendly_time", args?: [] | false, alias?: string  }
  | { name: "width", args?: [] | false, alias?: string  }
  | { name: "height", args?: [] | false, alias?: string  };

type UserPhotoPreviousValuesFields =
  | "id"
  | "url"
  | "thumb_url"
  | "caption"
  | "timestamp"
  | "friendly_time"
  | "width"
  | "height";





export interface UserPhotoPreviousValuesFieldDetails {
  id: {
    type: "ID"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  thumb_url: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  caption: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  timestamp: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  friendly_time: {
    type: "String"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  width: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
  height: {
    type: "Int"
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  };
}



export interface UserWhereUniqueInput {
  id?: string | null;
  email?: string | null;
  uid?: string | null;
}
export type UserWhereUniqueInputInputObject =
  | Extract<keyof UserWhereUniqueInput, string>
  | { name: "id", alias?: string  }
  | { name: "email", alias?: string  }
  | { name: "uid", alias?: string  };

export interface PhoneNumberWhereInput {
  user?: UserWhereInput | null;
  code?: string | null;
  code_not?: string | null;
  code_in?: string[];
  code_not_in?: string[];
  code_lt?: string | null;
  code_lte?: string | null;
  code_gt?: string | null;
  code_gte?: string | null;
  code_contains?: string | null;
  code_not_contains?: string | null;
  code_starts_with?: string | null;
  code_not_starts_with?: string | null;
  code_ends_with?: string | null;
  code_not_ends_with?: string | null;
  phone?: string | null;
  phone_not?: string | null;
  phone_in?: string[];
  phone_not_in?: string[];
  phone_lt?: string | null;
  phone_lte?: string | null;
  phone_gt?: string | null;
  phone_gte?: string | null;
  phone_contains?: string | null;
  phone_not_contains?: string | null;
  phone_starts_with?: string | null;
  phone_not_starts_with?: string | null;
  phone_ends_with?: string | null;
  phone_not_ends_with?: string | null;
  AND?: PhoneNumberWhereInput[];
  OR?: PhoneNumberWhereInput[];
  NOT?: PhoneNumberWhereInput[];
}
export type PhoneNumberWhereInputInputObject =
  | Extract<keyof PhoneNumberWhereInput, string>
  | { name: "user", alias?: string  }
  | { name: "code", alias?: string  }
  | { name: "code_not", alias?: string  }
  | { name: "code_in", alias?: string  }
  | { name: "code_not_in", alias?: string  }
  | { name: "code_lt", alias?: string  }
  | { name: "code_lte", alias?: string  }
  | { name: "code_gt", alias?: string  }
  | { name: "code_gte", alias?: string  }
  | { name: "code_contains", alias?: string  }
  | { name: "code_not_contains", alias?: string  }
  | { name: "code_starts_with", alias?: string  }
  | { name: "code_not_starts_with", alias?: string  }
  | { name: "code_ends_with", alias?: string  }
  | { name: "code_not_ends_with", alias?: string  }
  | { name: "phone", alias?: string  }
  | { name: "phone_not", alias?: string  }
  | { name: "phone_in", alias?: string  }
  | { name: "phone_not_in", alias?: string  }
  | { name: "phone_lt", alias?: string  }
  | { name: "phone_lte", alias?: string  }
  | { name: "phone_gt", alias?: string  }
  | { name: "phone_gte", alias?: string  }
  | { name: "phone_contains", alias?: string  }
  | { name: "phone_not_contains", alias?: string  }
  | { name: "phone_starts_with", alias?: string  }
  | { name: "phone_not_starts_with", alias?: string  }
  | { name: "phone_ends_with", alias?: string  }
  | { name: "phone_not_ends_with", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface UserWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  email?: string | null;
  email_not?: string | null;
  email_in?: string[];
  email_not_in?: string[];
  email_lt?: string | null;
  email_lte?: string | null;
  email_gt?: string | null;
  email_gte?: string | null;
  email_contains?: string | null;
  email_not_contains?: string | null;
  email_starts_with?: string | null;
  email_not_starts_with?: string | null;
  email_ends_with?: string | null;
  email_not_ends_with?: string | null;
  name?: string | null;
  name_not?: string | null;
  name_in?: string[];
  name_not_in?: string[];
  name_lt?: string | null;
  name_lte?: string | null;
  name_gt?: string | null;
  name_gte?: string | null;
  name_contains?: string | null;
  name_not_contains?: string | null;
  name_starts_with?: string | null;
  name_not_starts_with?: string | null;
  name_ends_with?: string | null;
  name_not_ends_with?: string | null;
  phone_number_every?: PhoneNumberWhereInput | null;
  phone_number_some?: PhoneNumberWhereInput | null;
  phone_number_none?: PhoneNumberWhereInput | null;
  user_type?: prisma.UserType | null;
  user_type_not?: prisma.UserType | null;
  user_type_in?: prisma.UserType[];
  user_type_not_in?: prisma.UserType[];
  reviews_every?: ReviewWhereInput | null;
  reviews_some?: ReviewWhereInput | null;
  reviews_none?: ReviewWhereInput | null;
  photos_every?: UserPhotoWhereInput | null;
  photos_some?: UserPhotoWhereInput | null;
  photos_none?: UserPhotoWhereInput | null;
  uid?: string | null;
  uid_not?: string | null;
  uid_in?: string[];
  uid_not_in?: string[];
  uid_lt?: string | null;
  uid_lte?: string | null;
  uid_gt?: string | null;
  uid_gte?: string | null;
  uid_contains?: string | null;
  uid_not_contains?: string | null;
  uid_starts_with?: string | null;
  uid_not_starts_with?: string | null;
  uid_ends_with?: string | null;
  uid_not_ends_with?: string | null;
  AND?: UserWhereInput[];
  OR?: UserWhereInput[];
  NOT?: UserWhereInput[];
}
export type UserWhereInputInputObject =
  | Extract<keyof UserWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "email", alias?: string  }
  | { name: "email_not", alias?: string  }
  | { name: "email_in", alias?: string  }
  | { name: "email_not_in", alias?: string  }
  | { name: "email_lt", alias?: string  }
  | { name: "email_lte", alias?: string  }
  | { name: "email_gt", alias?: string  }
  | { name: "email_gte", alias?: string  }
  | { name: "email_contains", alias?: string  }
  | { name: "email_not_contains", alias?: string  }
  | { name: "email_starts_with", alias?: string  }
  | { name: "email_not_starts_with", alias?: string  }
  | { name: "email_ends_with", alias?: string  }
  | { name: "email_not_ends_with", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "name_not", alias?: string  }
  | { name: "name_in", alias?: string  }
  | { name: "name_not_in", alias?: string  }
  | { name: "name_lt", alias?: string  }
  | { name: "name_lte", alias?: string  }
  | { name: "name_gt", alias?: string  }
  | { name: "name_gte", alias?: string  }
  | { name: "name_contains", alias?: string  }
  | { name: "name_not_contains", alias?: string  }
  | { name: "name_starts_with", alias?: string  }
  | { name: "name_not_starts_with", alias?: string  }
  | { name: "name_ends_with", alias?: string  }
  | { name: "name_not_ends_with", alias?: string  }
  | { name: "phone_number_every", alias?: string  }
  | { name: "phone_number_some", alias?: string  }
  | { name: "phone_number_none", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "user_type_not", alias?: string  }
  | { name: "user_type_in", alias?: string  }
  | { name: "user_type_not_in", alias?: string  }
  | { name: "reviews_every", alias?: string  }
  | { name: "reviews_some", alias?: string  }
  | { name: "reviews_none", alias?: string  }
  | { name: "photos_every", alias?: string  }
  | { name: "photos_some", alias?: string  }
  | { name: "photos_none", alias?: string  }
  | { name: "uid", alias?: string  }
  | { name: "uid_not", alias?: string  }
  | { name: "uid_in", alias?: string  }
  | { name: "uid_not_in", alias?: string  }
  | { name: "uid_lt", alias?: string  }
  | { name: "uid_lte", alias?: string  }
  | { name: "uid_gt", alias?: string  }
  | { name: "uid_gte", alias?: string  }
  | { name: "uid_contains", alias?: string  }
  | { name: "uid_not_contains", alias?: string  }
  | { name: "uid_starts_with", alias?: string  }
  | { name: "uid_not_starts_with", alias?: string  }
  | { name: "uid_ends_with", alias?: string  }
  | { name: "uid_not_ends_with", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ReviewWhereInput {
  user?: UserWhereInput | null;
  product?: ProductWhereInput | null;
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  rating?: number | null;
  rating_not?: number | null;
  rating_in?: number[];
  rating_not_in?: number[];
  rating_lt?: number | null;
  rating_lte?: number | null;
  rating_gt?: number | null;
  rating_gte?: number | null;
  review_text?: string | null;
  review_text_not?: string | null;
  review_text_in?: string[];
  review_text_not_in?: string[];
  review_text_lt?: string | null;
  review_text_lte?: string | null;
  review_text_gt?: string | null;
  review_text_gte?: string | null;
  review_text_contains?: string | null;
  review_text_not_contains?: string | null;
  review_text_starts_with?: string | null;
  review_text_not_starts_with?: string | null;
  review_text_ends_with?: string | null;
  review_text_not_ends_with?: string | null;
  review_time_friendly?: string | null;
  review_time_friendly_not?: string | null;
  review_time_friendly_in?: string[];
  review_time_friendly_not_in?: string[];
  review_time_friendly_lt?: string | null;
  review_time_friendly_lte?: string | null;
  review_time_friendly_gt?: string | null;
  review_time_friendly_gte?: string | null;
  review_time_friendly_contains?: string | null;
  review_time_friendly_not_contains?: string | null;
  review_time_friendly_starts_with?: string | null;
  review_time_friendly_not_starts_with?: string | null;
  review_time_friendly_ends_with?: string | null;
  review_time_friendly_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  AND?: ReviewWhereInput[];
  OR?: ReviewWhereInput[];
  NOT?: ReviewWhereInput[];
}
export type ReviewWhereInputInputObject =
  | Extract<keyof ReviewWhereInput, string>
  | { name: "user", alias?: string  }
  | { name: "product", alias?: string  }
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "rating_not", alias?: string  }
  | { name: "rating_in", alias?: string  }
  | { name: "rating_not_in", alias?: string  }
  | { name: "rating_lt", alias?: string  }
  | { name: "rating_lte", alias?: string  }
  | { name: "rating_gt", alias?: string  }
  | { name: "rating_gte", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_text_not", alias?: string  }
  | { name: "review_text_in", alias?: string  }
  | { name: "review_text_not_in", alias?: string  }
  | { name: "review_text_lt", alias?: string  }
  | { name: "review_text_lte", alias?: string  }
  | { name: "review_text_gt", alias?: string  }
  | { name: "review_text_gte", alias?: string  }
  | { name: "review_text_contains", alias?: string  }
  | { name: "review_text_not_contains", alias?: string  }
  | { name: "review_text_starts_with", alias?: string  }
  | { name: "review_text_not_starts_with", alias?: string  }
  | { name: "review_text_ends_with", alias?: string  }
  | { name: "review_text_not_ends_with", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "review_time_friendly_not", alias?: string  }
  | { name: "review_time_friendly_in", alias?: string  }
  | { name: "review_time_friendly_not_in", alias?: string  }
  | { name: "review_time_friendly_lt", alias?: string  }
  | { name: "review_time_friendly_lte", alias?: string  }
  | { name: "review_time_friendly_gt", alias?: string  }
  | { name: "review_time_friendly_gte", alias?: string  }
  | { name: "review_time_friendly_contains", alias?: string  }
  | { name: "review_time_friendly_not_contains", alias?: string  }
  | { name: "review_time_friendly_starts_with", alias?: string  }
  | { name: "review_time_friendly_not_starts_with", alias?: string  }
  | { name: "review_time_friendly_ends_with", alias?: string  }
  | { name: "review_time_friendly_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  name?: string | null;
  name_not?: string | null;
  name_in?: string[];
  name_not_in?: string[];
  name_lt?: string | null;
  name_lte?: string | null;
  name_gt?: string | null;
  name_gte?: string | null;
  name_contains?: string | null;
  name_not_contains?: string | null;
  name_starts_with?: string | null;
  name_not_starts_with?: string | null;
  name_ends_with?: string | null;
  name_not_ends_with?: string | null;
  url?: string | null;
  url_not?: string | null;
  url_in?: string[];
  url_not_in?: string[];
  url_lt?: string | null;
  url_lte?: string | null;
  url_gt?: string | null;
  url_gte?: string | null;
  url_contains?: string | null;
  url_not_contains?: string | null;
  url_starts_with?: string | null;
  url_not_starts_with?: string | null;
  url_ends_with?: string | null;
  url_not_ends_with?: string | null;
  thumb?: string | null;
  thumb_not?: string | null;
  thumb_in?: string[];
  thumb_not_in?: string[];
  thumb_lt?: string | null;
  thumb_lte?: string | null;
  thumb_gt?: string | null;
  thumb_gte?: string | null;
  thumb_contains?: string | null;
  thumb_not_contains?: string | null;
  thumb_starts_with?: string | null;
  thumb_not_starts_with?: string | null;
  thumb_ends_with?: string | null;
  thumb_not_ends_with?: string | null;
  featured_image?: string | null;
  featured_image_not?: string | null;
  featured_image_in?: string[];
  featured_image_not_in?: string[];
  featured_image_lt?: string | null;
  featured_image_lte?: string | null;
  featured_image_gt?: string | null;
  featured_image_gte?: string | null;
  featured_image_contains?: string | null;
  featured_image_not_contains?: string | null;
  featured_image_starts_with?: string | null;
  featured_image_not_starts_with?: string | null;
  featured_image_ends_with?: string | null;
  featured_image_not_ends_with?: string | null;
  photos_url?: string | null;
  photos_url_not?: string | null;
  photos_url_in?: string[];
  photos_url_not_in?: string[];
  photos_url_lt?: string | null;
  photos_url_lte?: string | null;
  photos_url_gt?: string | null;
  photos_url_gte?: string | null;
  photos_url_contains?: string | null;
  photos_url_not_contains?: string | null;
  photos_url_starts_with?: string | null;
  photos_url_not_starts_with?: string | null;
  photos_url_ends_with?: string | null;
  photos_url_not_ends_with?: string | null;
  user_rating?: ProductRatingWhereInput | null;
  has_online_delivery?: boolean | null;
  has_online_delivery_not?: boolean | null;
  is_delivering_now?: boolean | null;
  is_delivering_now_not?: boolean | null;
  deeplink?: string | null;
  deeplink_not?: string | null;
  deeplink_in?: string[];
  deeplink_not_in?: string[];
  deeplink_lt?: string | null;
  deeplink_lte?: string | null;
  deeplink_gt?: string | null;
  deeplink_gte?: string | null;
  deeplink_contains?: string | null;
  deeplink_not_contains?: string | null;
  deeplink_starts_with?: string | null;
  deeplink_not_starts_with?: string | null;
  deeplink_ends_with?: string | null;
  deeplink_not_ends_with?: string | null;
  photo_count?: number | null;
  photo_count_not?: number | null;
  photo_count_in?: number[];
  photo_count_not_in?: number[];
  photo_count_lt?: number | null;
  photo_count_lte?: number | null;
  photo_count_gt?: number | null;
  photo_count_gte?: number | null;
  photos_every?: ProductPhotoWhereInput | null;
  photos_some?: ProductPhotoWhereInput | null;
  photos_none?: ProductPhotoWhereInput | null;
  all_reviews_every?: ReviewWhereInput | null;
  all_reviews_some?: ReviewWhereInput | null;
  all_reviews_none?: ReviewWhereInput | null;
  AND?: ProductWhereInput[];
  OR?: ProductWhereInput[];
  NOT?: ProductWhereInput[];
}
export type ProductWhereInputInputObject =
  | Extract<keyof ProductWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "name_not", alias?: string  }
  | { name: "name_in", alias?: string  }
  | { name: "name_not_in", alias?: string  }
  | { name: "name_lt", alias?: string  }
  | { name: "name_lte", alias?: string  }
  | { name: "name_gt", alias?: string  }
  | { name: "name_gte", alias?: string  }
  | { name: "name_contains", alias?: string  }
  | { name: "name_not_contains", alias?: string  }
  | { name: "name_starts_with", alias?: string  }
  | { name: "name_not_starts_with", alias?: string  }
  | { name: "name_ends_with", alias?: string  }
  | { name: "name_not_ends_with", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "url_not", alias?: string  }
  | { name: "url_in", alias?: string  }
  | { name: "url_not_in", alias?: string  }
  | { name: "url_lt", alias?: string  }
  | { name: "url_lte", alias?: string  }
  | { name: "url_gt", alias?: string  }
  | { name: "url_gte", alias?: string  }
  | { name: "url_contains", alias?: string  }
  | { name: "url_not_contains", alias?: string  }
  | { name: "url_starts_with", alias?: string  }
  | { name: "url_not_starts_with", alias?: string  }
  | { name: "url_ends_with", alias?: string  }
  | { name: "url_not_ends_with", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "thumb_not", alias?: string  }
  | { name: "thumb_in", alias?: string  }
  | { name: "thumb_not_in", alias?: string  }
  | { name: "thumb_lt", alias?: string  }
  | { name: "thumb_lte", alias?: string  }
  | { name: "thumb_gt", alias?: string  }
  | { name: "thumb_gte", alias?: string  }
  | { name: "thumb_contains", alias?: string  }
  | { name: "thumb_not_contains", alias?: string  }
  | { name: "thumb_starts_with", alias?: string  }
  | { name: "thumb_not_starts_with", alias?: string  }
  | { name: "thumb_ends_with", alias?: string  }
  | { name: "thumb_not_ends_with", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "featured_image_not", alias?: string  }
  | { name: "featured_image_in", alias?: string  }
  | { name: "featured_image_not_in", alias?: string  }
  | { name: "featured_image_lt", alias?: string  }
  | { name: "featured_image_lte", alias?: string  }
  | { name: "featured_image_gt", alias?: string  }
  | { name: "featured_image_gte", alias?: string  }
  | { name: "featured_image_contains", alias?: string  }
  | { name: "featured_image_not_contains", alias?: string  }
  | { name: "featured_image_starts_with", alias?: string  }
  | { name: "featured_image_not_starts_with", alias?: string  }
  | { name: "featured_image_ends_with", alias?: string  }
  | { name: "featured_image_not_ends_with", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "photos_url_not", alias?: string  }
  | { name: "photos_url_in", alias?: string  }
  | { name: "photos_url_not_in", alias?: string  }
  | { name: "photos_url_lt", alias?: string  }
  | { name: "photos_url_lte", alias?: string  }
  | { name: "photos_url_gt", alias?: string  }
  | { name: "photos_url_gte", alias?: string  }
  | { name: "photos_url_contains", alias?: string  }
  | { name: "photos_url_not_contains", alias?: string  }
  | { name: "photos_url_starts_with", alias?: string  }
  | { name: "photos_url_not_starts_with", alias?: string  }
  | { name: "photos_url_ends_with", alias?: string  }
  | { name: "photos_url_not_ends_with", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "has_online_delivery_not", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "is_delivering_now_not", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "deeplink_not", alias?: string  }
  | { name: "deeplink_in", alias?: string  }
  | { name: "deeplink_not_in", alias?: string  }
  | { name: "deeplink_lt", alias?: string  }
  | { name: "deeplink_lte", alias?: string  }
  | { name: "deeplink_gt", alias?: string  }
  | { name: "deeplink_gte", alias?: string  }
  | { name: "deeplink_contains", alias?: string  }
  | { name: "deeplink_not_contains", alias?: string  }
  | { name: "deeplink_starts_with", alias?: string  }
  | { name: "deeplink_not_starts_with", alias?: string  }
  | { name: "deeplink_ends_with", alias?: string  }
  | { name: "deeplink_not_ends_with", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "photo_count_not", alias?: string  }
  | { name: "photo_count_in", alias?: string  }
  | { name: "photo_count_not_in", alias?: string  }
  | { name: "photo_count_lt", alias?: string  }
  | { name: "photo_count_lte", alias?: string  }
  | { name: "photo_count_gt", alias?: string  }
  | { name: "photo_count_gte", alias?: string  }
  | { name: "photos_every", alias?: string  }
  | { name: "photos_some", alias?: string  }
  | { name: "photos_none", alias?: string  }
  | { name: "all_reviews_every", alias?: string  }
  | { name: "all_reviews_some", alias?: string  }
  | { name: "all_reviews_none", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductRatingWhereInput {
  aggregate_rating?: number | null;
  aggregate_rating_not?: number | null;
  aggregate_rating_in?: number[];
  aggregate_rating_not_in?: number[];
  aggregate_rating_lt?: number | null;
  aggregate_rating_lte?: number | null;
  aggregate_rating_gt?: number | null;
  aggregate_rating_gte?: number | null;
  votes?: number | null;
  votes_not?: number | null;
  votes_in?: number[];
  votes_not_in?: number[];
  votes_lt?: number | null;
  votes_lte?: number | null;
  votes_gt?: number | null;
  votes_gte?: number | null;
  AND?: ProductRatingWhereInput[];
  OR?: ProductRatingWhereInput[];
  NOT?: ProductRatingWhereInput[];
}
export type ProductRatingWhereInputInputObject =
  | Extract<keyof ProductRatingWhereInput, string>
  | { name: "aggregate_rating", alias?: string  }
  | { name: "aggregate_rating_not", alias?: string  }
  | { name: "aggregate_rating_in", alias?: string  }
  | { name: "aggregate_rating_not_in", alias?: string  }
  | { name: "aggregate_rating_lt", alias?: string  }
  | { name: "aggregate_rating_lte", alias?: string  }
  | { name: "aggregate_rating_gt", alias?: string  }
  | { name: "aggregate_rating_gte", alias?: string  }
  | { name: "votes", alias?: string  }
  | { name: "votes_not", alias?: string  }
  | { name: "votes_in", alias?: string  }
  | { name: "votes_not_in", alias?: string  }
  | { name: "votes_lt", alias?: string  }
  | { name: "votes_lte", alias?: string  }
  | { name: "votes_gt", alias?: string  }
  | { name: "votes_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductPhotoWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  product?: ProductWhereInput | null;
  url?: string | null;
  url_not?: string | null;
  url_in?: string[];
  url_not_in?: string[];
  url_lt?: string | null;
  url_lte?: string | null;
  url_gt?: string | null;
  url_gte?: string | null;
  url_contains?: string | null;
  url_not_contains?: string | null;
  url_starts_with?: string | null;
  url_not_starts_with?: string | null;
  url_ends_with?: string | null;
  url_not_ends_with?: string | null;
  thumb_url?: string | null;
  thumb_url_not?: string | null;
  thumb_url_in?: string[];
  thumb_url_not_in?: string[];
  thumb_url_lt?: string | null;
  thumb_url_lte?: string | null;
  thumb_url_gt?: string | null;
  thumb_url_gte?: string | null;
  thumb_url_contains?: string | null;
  thumb_url_not_contains?: string | null;
  thumb_url_starts_with?: string | null;
  thumb_url_not_starts_with?: string | null;
  thumb_url_ends_with?: string | null;
  thumb_url_not_ends_with?: string | null;
  caption?: string | null;
  caption_not?: string | null;
  caption_in?: string[];
  caption_not_in?: string[];
  caption_lt?: string | null;
  caption_lte?: string | null;
  caption_gt?: string | null;
  caption_gte?: string | null;
  caption_contains?: string | null;
  caption_not_contains?: string | null;
  caption_starts_with?: string | null;
  caption_not_starts_with?: string | null;
  caption_ends_with?: string | null;
  caption_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  friendly_time?: string | null;
  friendly_time_not?: string | null;
  friendly_time_in?: string[];
  friendly_time_not_in?: string[];
  friendly_time_lt?: string | null;
  friendly_time_lte?: string | null;
  friendly_time_gt?: string | null;
  friendly_time_gte?: string | null;
  friendly_time_contains?: string | null;
  friendly_time_not_contains?: string | null;
  friendly_time_starts_with?: string | null;
  friendly_time_not_starts_with?: string | null;
  friendly_time_ends_with?: string | null;
  friendly_time_not_ends_with?: string | null;
  width?: number | null;
  width_not?: number | null;
  width_in?: number[];
  width_not_in?: number[];
  width_lt?: number | null;
  width_lte?: number | null;
  width_gt?: number | null;
  width_gte?: number | null;
  height?: number | null;
  height_not?: number | null;
  height_in?: number[];
  height_not_in?: number[];
  height_lt?: number | null;
  height_lte?: number | null;
  height_gt?: number | null;
  height_gte?: number | null;
  AND?: ProductPhotoWhereInput[];
  OR?: ProductPhotoWhereInput[];
  NOT?: ProductPhotoWhereInput[];
}
export type ProductPhotoWhereInputInputObject =
  | Extract<keyof ProductPhotoWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "product", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "url_not", alias?: string  }
  | { name: "url_in", alias?: string  }
  | { name: "url_not_in", alias?: string  }
  | { name: "url_lt", alias?: string  }
  | { name: "url_lte", alias?: string  }
  | { name: "url_gt", alias?: string  }
  | { name: "url_gte", alias?: string  }
  | { name: "url_contains", alias?: string  }
  | { name: "url_not_contains", alias?: string  }
  | { name: "url_starts_with", alias?: string  }
  | { name: "url_not_starts_with", alias?: string  }
  | { name: "url_ends_with", alias?: string  }
  | { name: "url_not_ends_with", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "thumb_url_not", alias?: string  }
  | { name: "thumb_url_in", alias?: string  }
  | { name: "thumb_url_not_in", alias?: string  }
  | { name: "thumb_url_lt", alias?: string  }
  | { name: "thumb_url_lte", alias?: string  }
  | { name: "thumb_url_gt", alias?: string  }
  | { name: "thumb_url_gte", alias?: string  }
  | { name: "thumb_url_contains", alias?: string  }
  | { name: "thumb_url_not_contains", alias?: string  }
  | { name: "thumb_url_starts_with", alias?: string  }
  | { name: "thumb_url_not_starts_with", alias?: string  }
  | { name: "thumb_url_ends_with", alias?: string  }
  | { name: "thumb_url_not_ends_with", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "caption_not", alias?: string  }
  | { name: "caption_in", alias?: string  }
  | { name: "caption_not_in", alias?: string  }
  | { name: "caption_lt", alias?: string  }
  | { name: "caption_lte", alias?: string  }
  | { name: "caption_gt", alias?: string  }
  | { name: "caption_gte", alias?: string  }
  | { name: "caption_contains", alias?: string  }
  | { name: "caption_not_contains", alias?: string  }
  | { name: "caption_starts_with", alias?: string  }
  | { name: "caption_not_starts_with", alias?: string  }
  | { name: "caption_ends_with", alias?: string  }
  | { name: "caption_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "friendly_time_not", alias?: string  }
  | { name: "friendly_time_in", alias?: string  }
  | { name: "friendly_time_not_in", alias?: string  }
  | { name: "friendly_time_lt", alias?: string  }
  | { name: "friendly_time_lte", alias?: string  }
  | { name: "friendly_time_gt", alias?: string  }
  | { name: "friendly_time_gte", alias?: string  }
  | { name: "friendly_time_contains", alias?: string  }
  | { name: "friendly_time_not_contains", alias?: string  }
  | { name: "friendly_time_starts_with", alias?: string  }
  | { name: "friendly_time_not_starts_with", alias?: string  }
  | { name: "friendly_time_ends_with", alias?: string  }
  | { name: "friendly_time_not_ends_with", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "width_not", alias?: string  }
  | { name: "width_in", alias?: string  }
  | { name: "width_not_in", alias?: string  }
  | { name: "width_lt", alias?: string  }
  | { name: "width_lte", alias?: string  }
  | { name: "width_gt", alias?: string  }
  | { name: "width_gte", alias?: string  }
  | { name: "height", alias?: string  }
  | { name: "height_not", alias?: string  }
  | { name: "height_in", alias?: string  }
  | { name: "height_not_in", alias?: string  }
  | { name: "height_lt", alias?: string  }
  | { name: "height_lte", alias?: string  }
  | { name: "height_gt", alias?: string  }
  | { name: "height_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface UserPhotoWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  user?: UserWhereInput | null;
  url?: string | null;
  url_not?: string | null;
  url_in?: string[];
  url_not_in?: string[];
  url_lt?: string | null;
  url_lte?: string | null;
  url_gt?: string | null;
  url_gte?: string | null;
  url_contains?: string | null;
  url_not_contains?: string | null;
  url_starts_with?: string | null;
  url_not_starts_with?: string | null;
  url_ends_with?: string | null;
  url_not_ends_with?: string | null;
  thumb_url?: string | null;
  thumb_url_not?: string | null;
  thumb_url_in?: string[];
  thumb_url_not_in?: string[];
  thumb_url_lt?: string | null;
  thumb_url_lte?: string | null;
  thumb_url_gt?: string | null;
  thumb_url_gte?: string | null;
  thumb_url_contains?: string | null;
  thumb_url_not_contains?: string | null;
  thumb_url_starts_with?: string | null;
  thumb_url_not_starts_with?: string | null;
  thumb_url_ends_with?: string | null;
  thumb_url_not_ends_with?: string | null;
  caption?: string | null;
  caption_not?: string | null;
  caption_in?: string[];
  caption_not_in?: string[];
  caption_lt?: string | null;
  caption_lte?: string | null;
  caption_gt?: string | null;
  caption_gte?: string | null;
  caption_contains?: string | null;
  caption_not_contains?: string | null;
  caption_starts_with?: string | null;
  caption_not_starts_with?: string | null;
  caption_ends_with?: string | null;
  caption_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  friendly_time?: string | null;
  friendly_time_not?: string | null;
  friendly_time_in?: string[];
  friendly_time_not_in?: string[];
  friendly_time_lt?: string | null;
  friendly_time_lte?: string | null;
  friendly_time_gt?: string | null;
  friendly_time_gte?: string | null;
  friendly_time_contains?: string | null;
  friendly_time_not_contains?: string | null;
  friendly_time_starts_with?: string | null;
  friendly_time_not_starts_with?: string | null;
  friendly_time_ends_with?: string | null;
  friendly_time_not_ends_with?: string | null;
  width?: number | null;
  width_not?: number | null;
  width_in?: number[];
  width_not_in?: number[];
  width_lt?: number | null;
  width_lte?: number | null;
  width_gt?: number | null;
  width_gte?: number | null;
  height?: number | null;
  height_not?: number | null;
  height_in?: number[];
  height_not_in?: number[];
  height_lt?: number | null;
  height_lte?: number | null;
  height_gt?: number | null;
  height_gte?: number | null;
  AND?: UserPhotoWhereInput[];
  OR?: UserPhotoWhereInput[];
  NOT?: UserPhotoWhereInput[];
}
export type UserPhotoWhereInputInputObject =
  | Extract<keyof UserPhotoWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "user", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "url_not", alias?: string  }
  | { name: "url_in", alias?: string  }
  | { name: "url_not_in", alias?: string  }
  | { name: "url_lt", alias?: string  }
  | { name: "url_lte", alias?: string  }
  | { name: "url_gt", alias?: string  }
  | { name: "url_gte", alias?: string  }
  | { name: "url_contains", alias?: string  }
  | { name: "url_not_contains", alias?: string  }
  | { name: "url_starts_with", alias?: string  }
  | { name: "url_not_starts_with", alias?: string  }
  | { name: "url_ends_with", alias?: string  }
  | { name: "url_not_ends_with", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "thumb_url_not", alias?: string  }
  | { name: "thumb_url_in", alias?: string  }
  | { name: "thumb_url_not_in", alias?: string  }
  | { name: "thumb_url_lt", alias?: string  }
  | { name: "thumb_url_lte", alias?: string  }
  | { name: "thumb_url_gt", alias?: string  }
  | { name: "thumb_url_gte", alias?: string  }
  | { name: "thumb_url_contains", alias?: string  }
  | { name: "thumb_url_not_contains", alias?: string  }
  | { name: "thumb_url_starts_with", alias?: string  }
  | { name: "thumb_url_not_starts_with", alias?: string  }
  | { name: "thumb_url_ends_with", alias?: string  }
  | { name: "thumb_url_not_ends_with", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "caption_not", alias?: string  }
  | { name: "caption_in", alias?: string  }
  | { name: "caption_not_in", alias?: string  }
  | { name: "caption_lt", alias?: string  }
  | { name: "caption_lte", alias?: string  }
  | { name: "caption_gt", alias?: string  }
  | { name: "caption_gte", alias?: string  }
  | { name: "caption_contains", alias?: string  }
  | { name: "caption_not_contains", alias?: string  }
  | { name: "caption_starts_with", alias?: string  }
  | { name: "caption_not_starts_with", alias?: string  }
  | { name: "caption_ends_with", alias?: string  }
  | { name: "caption_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "friendly_time_not", alias?: string  }
  | { name: "friendly_time_in", alias?: string  }
  | { name: "friendly_time_not_in", alias?: string  }
  | { name: "friendly_time_lt", alias?: string  }
  | { name: "friendly_time_lte", alias?: string  }
  | { name: "friendly_time_gt", alias?: string  }
  | { name: "friendly_time_gte", alias?: string  }
  | { name: "friendly_time_contains", alias?: string  }
  | { name: "friendly_time_not_contains", alias?: string  }
  | { name: "friendly_time_starts_with", alias?: string  }
  | { name: "friendly_time_not_starts_with", alias?: string  }
  | { name: "friendly_time_ends_with", alias?: string  }
  | { name: "friendly_time_not_ends_with", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "width_not", alias?: string  }
  | { name: "width_in", alias?: string  }
  | { name: "width_not_in", alias?: string  }
  | { name: "width_lt", alias?: string  }
  | { name: "width_lte", alias?: string  }
  | { name: "width_gt", alias?: string  }
  | { name: "width_gte", alias?: string  }
  | { name: "height", alias?: string  }
  | { name: "height_not", alias?: string  }
  | { name: "height_in", alias?: string  }
  | { name: "height_not_in", alias?: string  }
  | { name: "height_lt", alias?: string  }
  | { name: "height_lte", alias?: string  }
  | { name: "height_gt", alias?: string  }
  | { name: "height_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductWhereUniqueInput {
  id?: string | null;
}
export type ProductWhereUniqueInputInputObject =
  | Extract<keyof ProductWhereUniqueInput, string>
  | { name: "id", alias?: string  };

export interface ReviewWhereUniqueInput {
  id?: string | null;
}
export type ReviewWhereUniqueInputInputObject =
  | Extract<keyof ReviewWhereUniqueInput, string>
  | { name: "id", alias?: string  };

export interface ProductPhotoWhereUniqueInput {
  id?: string | null;
}
export type ProductPhotoWhereUniqueInputInputObject =
  | Extract<keyof ProductPhotoWhereUniqueInput, string>
  | { name: "id", alias?: string  };

export interface UserPhotoWhereUniqueInput {
  id?: string | null;
}
export type UserPhotoWhereUniqueInputInputObject =
  | Extract<keyof UserPhotoWhereUniqueInput, string>
  | { name: "id", alias?: string  };

export interface UserCreateInput {
  email?: string | null;
  name?: string;
  phone_number?: PhoneNumberCreateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  reviews?: ReviewCreateManyWithoutUserInput | null;
  photos?: UserPhotoCreateManyWithoutUserInput | null;
  uid?: string;
}
export type UserCreateInputInputObject =
  | Extract<keyof UserCreateInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "reviews", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "uid", alias?: string  };

export interface PhoneNumberCreateManyWithoutUserInput {
  create?: PhoneNumberCreateWithoutUserInput[];
}
export type PhoneNumberCreateManyWithoutUserInputInputObject =
  | Extract<keyof PhoneNumberCreateManyWithoutUserInput, string>
  | { name: "create", alias?: string  };

export interface PhoneNumberCreateWithoutUserInput {
  code?: string | null;
  phone?: string;
}
export type PhoneNumberCreateWithoutUserInputInputObject =
  | Extract<keyof PhoneNumberCreateWithoutUserInput, string>
  | { name: "code", alias?: string  }
  | { name: "phone", alias?: string  };

export interface ReviewCreateManyWithoutUserInput {
  create?: ReviewCreateWithoutUserInput[];
  connect?: ReviewWhereUniqueInput[];
}
export type ReviewCreateManyWithoutUserInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutUserInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ReviewCreateWithoutUserInput {
  product?: ProductCreateOneWithoutAll_reviewsInput;
  rating?: number;
  review_text?: string;
  review_time_friendly?: string;
  timestamp?: number;
}
export type ReviewCreateWithoutUserInputInputObject =
  | Extract<keyof ReviewCreateWithoutUserInput, string>
  | { name: "product", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface ProductCreateOneWithoutAll_reviewsInput {
  create?: ProductCreateWithoutAll_reviewsInput | null;
  connect?: ProductWhereUniqueInput | null;
}
export type ProductCreateOneWithoutAll_reviewsInputInputObject =
  | Extract<keyof ProductCreateOneWithoutAll_reviewsInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ProductCreateWithoutAll_reviewsInput {
  name?: string;
  url?: string;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingCreateOneInput;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number;
  photos?: ProductPhotoCreateManyWithoutProductInput | null;
}
export type ProductCreateWithoutAll_reviewsInputInputObject =
  | Extract<keyof ProductCreateWithoutAll_reviewsInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "photos", alias?: string  };

export interface ProductRatingCreateOneInput {
  create?: ProductRatingCreateInput | null;
}
export type ProductRatingCreateOneInputInputObject =
  | Extract<keyof ProductRatingCreateOneInput, string>
  | { name: "create", alias?: string  };

export interface ProductRatingCreateInput {
  aggregate_rating?: number | null;
  votes?: number | null;
}
export type ProductRatingCreateInputInputObject =
  | Extract<keyof ProductRatingCreateInput, string>
  | { name: "aggregate_rating", alias?: string  }
  | { name: "votes", alias?: string  };

export interface ProductPhotoCreateManyWithoutProductInput {
  create?: ProductPhotoCreateWithoutProductInput[];
  connect?: ProductPhotoWhereUniqueInput[];
}
export type ProductPhotoCreateManyWithoutProductInputInputObject =
  | Extract<keyof ProductPhotoCreateManyWithoutProductInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ProductPhotoCreateWithoutProductInput {
  url?: string;
  thumb_url?: string;
  caption?: string;
  timestamp?: number;
  friendly_time?: string;
  width?: number;
  height?: number;
}
export type ProductPhotoCreateWithoutProductInputInputObject =
  | Extract<keyof ProductPhotoCreateWithoutProductInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserPhotoCreateManyWithoutUserInput {
  create?: UserPhotoCreateWithoutUserInput[];
  connect?: UserPhotoWhereUniqueInput[];
}
export type UserPhotoCreateManyWithoutUserInputInputObject =
  | Extract<keyof UserPhotoCreateManyWithoutUserInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserPhotoCreateWithoutUserInput {
  url?: string;
  thumb_url?: string;
  caption?: string;
  timestamp?: number;
  friendly_time?: string;
  width?: number;
  height?: number;
}
export type UserPhotoCreateWithoutUserInputInputObject =
  | Extract<keyof UserPhotoCreateWithoutUserInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserUpdateInput {
  email?: string | null;
  name?: string | null;
  phone_number?: PhoneNumberUpdateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  reviews?: ReviewUpdateManyWithoutUserInput | null;
  photos?: UserPhotoUpdateManyWithoutUserInput | null;
  uid?: string | null;
}
export type UserUpdateInputInputObject =
  | Extract<keyof UserUpdateInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "reviews", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "uid", alias?: string  };

export interface PhoneNumberUpdateManyWithoutUserInput {
  create?: PhoneNumberCreateWithoutUserInput[];
  deleteMany?: PhoneNumberScalarWhereInput[];
  updateMany?: PhoneNumberUpdateManyWithWhereNestedInput[];
}
export type PhoneNumberUpdateManyWithoutUserInputInputObject =
  | Extract<keyof PhoneNumberUpdateManyWithoutUserInput, string>
  | { name: "create", alias?: string  }
  | { name: "deleteMany", alias?: string  }
  | { name: "updateMany", alias?: string  };

export interface PhoneNumberScalarWhereInput {
  code?: string | null;
  code_not?: string | null;
  code_in?: string[];
  code_not_in?: string[];
  code_lt?: string | null;
  code_lte?: string | null;
  code_gt?: string | null;
  code_gte?: string | null;
  code_contains?: string | null;
  code_not_contains?: string | null;
  code_starts_with?: string | null;
  code_not_starts_with?: string | null;
  code_ends_with?: string | null;
  code_not_ends_with?: string | null;
  phone?: string | null;
  phone_not?: string | null;
  phone_in?: string[];
  phone_not_in?: string[];
  phone_lt?: string | null;
  phone_lte?: string | null;
  phone_gt?: string | null;
  phone_gte?: string | null;
  phone_contains?: string | null;
  phone_not_contains?: string | null;
  phone_starts_with?: string | null;
  phone_not_starts_with?: string | null;
  phone_ends_with?: string | null;
  phone_not_ends_with?: string | null;
  AND?: PhoneNumberScalarWhereInput[];
  OR?: PhoneNumberScalarWhereInput[];
  NOT?: PhoneNumberScalarWhereInput[];
}
export type PhoneNumberScalarWhereInputInputObject =
  | Extract<keyof PhoneNumberScalarWhereInput, string>
  | { name: "code", alias?: string  }
  | { name: "code_not", alias?: string  }
  | { name: "code_in", alias?: string  }
  | { name: "code_not_in", alias?: string  }
  | { name: "code_lt", alias?: string  }
  | { name: "code_lte", alias?: string  }
  | { name: "code_gt", alias?: string  }
  | { name: "code_gte", alias?: string  }
  | { name: "code_contains", alias?: string  }
  | { name: "code_not_contains", alias?: string  }
  | { name: "code_starts_with", alias?: string  }
  | { name: "code_not_starts_with", alias?: string  }
  | { name: "code_ends_with", alias?: string  }
  | { name: "code_not_ends_with", alias?: string  }
  | { name: "phone", alias?: string  }
  | { name: "phone_not", alias?: string  }
  | { name: "phone_in", alias?: string  }
  | { name: "phone_not_in", alias?: string  }
  | { name: "phone_lt", alias?: string  }
  | { name: "phone_lte", alias?: string  }
  | { name: "phone_gt", alias?: string  }
  | { name: "phone_gte", alias?: string  }
  | { name: "phone_contains", alias?: string  }
  | { name: "phone_not_contains", alias?: string  }
  | { name: "phone_starts_with", alias?: string  }
  | { name: "phone_not_starts_with", alias?: string  }
  | { name: "phone_ends_with", alias?: string  }
  | { name: "phone_not_ends_with", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface PhoneNumberUpdateManyWithWhereNestedInput {
  where?: PhoneNumberScalarWhereInput;
  data?: PhoneNumberUpdateManyDataInput;
}
export type PhoneNumberUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof PhoneNumberUpdateManyWithWhereNestedInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface PhoneNumberUpdateManyDataInput {
  code?: string | null;
  phone?: string | null;
}
export type PhoneNumberUpdateManyDataInputInputObject =
  | Extract<keyof PhoneNumberUpdateManyDataInput, string>
  | { name: "code", alias?: string  }
  | { name: "phone", alias?: string  };

export interface ReviewUpdateManyWithoutUserInput {
  create?: ReviewCreateWithoutUserInput[];
  delete?: ReviewWhereUniqueInput[];
  connect?: ReviewWhereUniqueInput[];
  set?: ReviewWhereUniqueInput[];
  disconnect?: ReviewWhereUniqueInput[];
  update?: ReviewUpdateWithWhereUniqueWithoutUserInput[];
  upsert?: ReviewUpsertWithWhereUniqueWithoutUserInput[];
  deleteMany?: ReviewScalarWhereInput[];
  updateMany?: ReviewUpdateManyWithWhereNestedInput[];
}
export type ReviewUpdateManyWithoutUserInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutUserInput, string>
  | { name: "create", alias?: string  }
  | { name: "delete", alias?: string  }
  | { name: "connect", alias?: string  }
  | { name: "set", alias?: string  }
  | { name: "disconnect", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "deleteMany", alias?: string  }
  | { name: "updateMany", alias?: string  };

export interface ReviewUpdateWithWhereUniqueWithoutUserInput {
  where?: ReviewWhereUniqueInput;
  data?: ReviewUpdateWithoutUserDataInput;
}
export type ReviewUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface ReviewUpdateWithoutUserDataInput {
  product?: ProductUpdateOneRequiredWithoutAll_reviewsInput | null;
  rating?: number | null;
  review_text?: string | null;
  review_time_friendly?: string | null;
  timestamp?: number | null;
}
export type ReviewUpdateWithoutUserDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutUserDataInput, string>
  | { name: "product", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface ProductUpdateOneRequiredWithoutAll_reviewsInput {
  create?: ProductCreateWithoutAll_reviewsInput | null;
  update?: ProductUpdateWithoutAll_reviewsDataInput | null;
  upsert?: ProductUpsertWithoutAll_reviewsInput | null;
  connect?: ProductWhereUniqueInput | null;
}
export type ProductUpdateOneRequiredWithoutAll_reviewsInputInputObject =
  | Extract<keyof ProductUpdateOneRequiredWithoutAll_reviewsInput, string>
  | { name: "create", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ProductUpdateWithoutAll_reviewsDataInput {
  name?: string | null;
  url?: string | null;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingUpdateOneRequiredInput | null;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number | null;
  photos?: ProductPhotoUpdateManyWithoutProductInput | null;
}
export type ProductUpdateWithoutAll_reviewsDataInputInputObject =
  | Extract<keyof ProductUpdateWithoutAll_reviewsDataInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "photos", alias?: string  };

export interface ProductRatingUpdateOneRequiredInput {
  create?: ProductRatingCreateInput | null;
  update?: ProductRatingUpdateDataInput | null;
  upsert?: ProductRatingUpsertNestedInput | null;
}
export type ProductRatingUpdateOneRequiredInputInputObject =
  | Extract<keyof ProductRatingUpdateOneRequiredInput, string>
  | { name: "create", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  };

export interface ProductRatingUpdateDataInput {
  aggregate_rating?: number | null;
  votes?: number | null;
}
export type ProductRatingUpdateDataInputInputObject =
  | Extract<keyof ProductRatingUpdateDataInput, string>
  | { name: "aggregate_rating", alias?: string  }
  | { name: "votes", alias?: string  };

export interface ProductRatingUpsertNestedInput {
  update?: ProductRatingUpdateDataInput;
  create?: ProductRatingCreateInput;
}
export type ProductRatingUpsertNestedInputInputObject =
  | Extract<keyof ProductRatingUpsertNestedInput, string>
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ProductPhotoUpdateManyWithoutProductInput {
  create?: ProductPhotoCreateWithoutProductInput[];
  delete?: ProductPhotoWhereUniqueInput[];
  connect?: ProductPhotoWhereUniqueInput[];
  set?: ProductPhotoWhereUniqueInput[];
  disconnect?: ProductPhotoWhereUniqueInput[];
  update?: ProductPhotoUpdateWithWhereUniqueWithoutProductInput[];
  upsert?: ProductPhotoUpsertWithWhereUniqueWithoutProductInput[];
  deleteMany?: ProductPhotoScalarWhereInput[];
  updateMany?: ProductPhotoUpdateManyWithWhereNestedInput[];
}
export type ProductPhotoUpdateManyWithoutProductInputInputObject =
  | Extract<keyof ProductPhotoUpdateManyWithoutProductInput, string>
  | { name: "create", alias?: string  }
  | { name: "delete", alias?: string  }
  | { name: "connect", alias?: string  }
  | { name: "set", alias?: string  }
  | { name: "disconnect", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "deleteMany", alias?: string  }
  | { name: "updateMany", alias?: string  };

export interface ProductPhotoUpdateWithWhereUniqueWithoutProductInput {
  where?: ProductPhotoWhereUniqueInput;
  data?: ProductPhotoUpdateWithoutProductDataInput;
}
export type ProductPhotoUpdateWithWhereUniqueWithoutProductInputInputObject =
  | Extract<keyof ProductPhotoUpdateWithWhereUniqueWithoutProductInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface ProductPhotoUpdateWithoutProductDataInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type ProductPhotoUpdateWithoutProductDataInputInputObject =
  | Extract<keyof ProductPhotoUpdateWithoutProductDataInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface ProductPhotoUpsertWithWhereUniqueWithoutProductInput {
  where?: ProductPhotoWhereUniqueInput;
  update?: ProductPhotoUpdateWithoutProductDataInput;
  create?: ProductPhotoCreateWithoutProductInput;
}
export type ProductPhotoUpsertWithWhereUniqueWithoutProductInputInputObject =
  | Extract<keyof ProductPhotoUpsertWithWhereUniqueWithoutProductInput, string>
  | { name: "where", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ProductPhotoScalarWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  url?: string | null;
  url_not?: string | null;
  url_in?: string[];
  url_not_in?: string[];
  url_lt?: string | null;
  url_lte?: string | null;
  url_gt?: string | null;
  url_gte?: string | null;
  url_contains?: string | null;
  url_not_contains?: string | null;
  url_starts_with?: string | null;
  url_not_starts_with?: string | null;
  url_ends_with?: string | null;
  url_not_ends_with?: string | null;
  thumb_url?: string | null;
  thumb_url_not?: string | null;
  thumb_url_in?: string[];
  thumb_url_not_in?: string[];
  thumb_url_lt?: string | null;
  thumb_url_lte?: string | null;
  thumb_url_gt?: string | null;
  thumb_url_gte?: string | null;
  thumb_url_contains?: string | null;
  thumb_url_not_contains?: string | null;
  thumb_url_starts_with?: string | null;
  thumb_url_not_starts_with?: string | null;
  thumb_url_ends_with?: string | null;
  thumb_url_not_ends_with?: string | null;
  caption?: string | null;
  caption_not?: string | null;
  caption_in?: string[];
  caption_not_in?: string[];
  caption_lt?: string | null;
  caption_lte?: string | null;
  caption_gt?: string | null;
  caption_gte?: string | null;
  caption_contains?: string | null;
  caption_not_contains?: string | null;
  caption_starts_with?: string | null;
  caption_not_starts_with?: string | null;
  caption_ends_with?: string | null;
  caption_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  friendly_time?: string | null;
  friendly_time_not?: string | null;
  friendly_time_in?: string[];
  friendly_time_not_in?: string[];
  friendly_time_lt?: string | null;
  friendly_time_lte?: string | null;
  friendly_time_gt?: string | null;
  friendly_time_gte?: string | null;
  friendly_time_contains?: string | null;
  friendly_time_not_contains?: string | null;
  friendly_time_starts_with?: string | null;
  friendly_time_not_starts_with?: string | null;
  friendly_time_ends_with?: string | null;
  friendly_time_not_ends_with?: string | null;
  width?: number | null;
  width_not?: number | null;
  width_in?: number[];
  width_not_in?: number[];
  width_lt?: number | null;
  width_lte?: number | null;
  width_gt?: number | null;
  width_gte?: number | null;
  height?: number | null;
  height_not?: number | null;
  height_in?: number[];
  height_not_in?: number[];
  height_lt?: number | null;
  height_lte?: number | null;
  height_gt?: number | null;
  height_gte?: number | null;
  AND?: ProductPhotoScalarWhereInput[];
  OR?: ProductPhotoScalarWhereInput[];
  NOT?: ProductPhotoScalarWhereInput[];
}
export type ProductPhotoScalarWhereInputInputObject =
  | Extract<keyof ProductPhotoScalarWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "url_not", alias?: string  }
  | { name: "url_in", alias?: string  }
  | { name: "url_not_in", alias?: string  }
  | { name: "url_lt", alias?: string  }
  | { name: "url_lte", alias?: string  }
  | { name: "url_gt", alias?: string  }
  | { name: "url_gte", alias?: string  }
  | { name: "url_contains", alias?: string  }
  | { name: "url_not_contains", alias?: string  }
  | { name: "url_starts_with", alias?: string  }
  | { name: "url_not_starts_with", alias?: string  }
  | { name: "url_ends_with", alias?: string  }
  | { name: "url_not_ends_with", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "thumb_url_not", alias?: string  }
  | { name: "thumb_url_in", alias?: string  }
  | { name: "thumb_url_not_in", alias?: string  }
  | { name: "thumb_url_lt", alias?: string  }
  | { name: "thumb_url_lte", alias?: string  }
  | { name: "thumb_url_gt", alias?: string  }
  | { name: "thumb_url_gte", alias?: string  }
  | { name: "thumb_url_contains", alias?: string  }
  | { name: "thumb_url_not_contains", alias?: string  }
  | { name: "thumb_url_starts_with", alias?: string  }
  | { name: "thumb_url_not_starts_with", alias?: string  }
  | { name: "thumb_url_ends_with", alias?: string  }
  | { name: "thumb_url_not_ends_with", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "caption_not", alias?: string  }
  | { name: "caption_in", alias?: string  }
  | { name: "caption_not_in", alias?: string  }
  | { name: "caption_lt", alias?: string  }
  | { name: "caption_lte", alias?: string  }
  | { name: "caption_gt", alias?: string  }
  | { name: "caption_gte", alias?: string  }
  | { name: "caption_contains", alias?: string  }
  | { name: "caption_not_contains", alias?: string  }
  | { name: "caption_starts_with", alias?: string  }
  | { name: "caption_not_starts_with", alias?: string  }
  | { name: "caption_ends_with", alias?: string  }
  | { name: "caption_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "friendly_time_not", alias?: string  }
  | { name: "friendly_time_in", alias?: string  }
  | { name: "friendly_time_not_in", alias?: string  }
  | { name: "friendly_time_lt", alias?: string  }
  | { name: "friendly_time_lte", alias?: string  }
  | { name: "friendly_time_gt", alias?: string  }
  | { name: "friendly_time_gte", alias?: string  }
  | { name: "friendly_time_contains", alias?: string  }
  | { name: "friendly_time_not_contains", alias?: string  }
  | { name: "friendly_time_starts_with", alias?: string  }
  | { name: "friendly_time_not_starts_with", alias?: string  }
  | { name: "friendly_time_ends_with", alias?: string  }
  | { name: "friendly_time_not_ends_with", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "width_not", alias?: string  }
  | { name: "width_in", alias?: string  }
  | { name: "width_not_in", alias?: string  }
  | { name: "width_lt", alias?: string  }
  | { name: "width_lte", alias?: string  }
  | { name: "width_gt", alias?: string  }
  | { name: "width_gte", alias?: string  }
  | { name: "height", alias?: string  }
  | { name: "height_not", alias?: string  }
  | { name: "height_in", alias?: string  }
  | { name: "height_not_in", alias?: string  }
  | { name: "height_lt", alias?: string  }
  | { name: "height_lte", alias?: string  }
  | { name: "height_gt", alias?: string  }
  | { name: "height_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductPhotoUpdateManyWithWhereNestedInput {
  where?: ProductPhotoScalarWhereInput;
  data?: ProductPhotoUpdateManyDataInput;
}
export type ProductPhotoUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ProductPhotoUpdateManyWithWhereNestedInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface ProductPhotoUpdateManyDataInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type ProductPhotoUpdateManyDataInputInputObject =
  | Extract<keyof ProductPhotoUpdateManyDataInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface ProductUpsertWithoutAll_reviewsInput {
  update?: ProductUpdateWithoutAll_reviewsDataInput;
  create?: ProductCreateWithoutAll_reviewsInput;
}
export type ProductUpsertWithoutAll_reviewsInputInputObject =
  | Extract<keyof ProductUpsertWithoutAll_reviewsInput, string>
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ReviewUpsertWithWhereUniqueWithoutUserInput {
  where?: ReviewWhereUniqueInput;
  update?: ReviewUpdateWithoutUserDataInput;
  create?: ReviewCreateWithoutUserInput;
}
export type ReviewUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: "where", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ReviewScalarWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  rating?: number | null;
  rating_not?: number | null;
  rating_in?: number[];
  rating_not_in?: number[];
  rating_lt?: number | null;
  rating_lte?: number | null;
  rating_gt?: number | null;
  rating_gte?: number | null;
  review_text?: string | null;
  review_text_not?: string | null;
  review_text_in?: string[];
  review_text_not_in?: string[];
  review_text_lt?: string | null;
  review_text_lte?: string | null;
  review_text_gt?: string | null;
  review_text_gte?: string | null;
  review_text_contains?: string | null;
  review_text_not_contains?: string | null;
  review_text_starts_with?: string | null;
  review_text_not_starts_with?: string | null;
  review_text_ends_with?: string | null;
  review_text_not_ends_with?: string | null;
  review_time_friendly?: string | null;
  review_time_friendly_not?: string | null;
  review_time_friendly_in?: string[];
  review_time_friendly_not_in?: string[];
  review_time_friendly_lt?: string | null;
  review_time_friendly_lte?: string | null;
  review_time_friendly_gt?: string | null;
  review_time_friendly_gte?: string | null;
  review_time_friendly_contains?: string | null;
  review_time_friendly_not_contains?: string | null;
  review_time_friendly_starts_with?: string | null;
  review_time_friendly_not_starts_with?: string | null;
  review_time_friendly_ends_with?: string | null;
  review_time_friendly_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  AND?: ReviewScalarWhereInput[];
  OR?: ReviewScalarWhereInput[];
  NOT?: ReviewScalarWhereInput[];
}
export type ReviewScalarWhereInputInputObject =
  | Extract<keyof ReviewScalarWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "rating_not", alias?: string  }
  | { name: "rating_in", alias?: string  }
  | { name: "rating_not_in", alias?: string  }
  | { name: "rating_lt", alias?: string  }
  | { name: "rating_lte", alias?: string  }
  | { name: "rating_gt", alias?: string  }
  | { name: "rating_gte", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_text_not", alias?: string  }
  | { name: "review_text_in", alias?: string  }
  | { name: "review_text_not_in", alias?: string  }
  | { name: "review_text_lt", alias?: string  }
  | { name: "review_text_lte", alias?: string  }
  | { name: "review_text_gt", alias?: string  }
  | { name: "review_text_gte", alias?: string  }
  | { name: "review_text_contains", alias?: string  }
  | { name: "review_text_not_contains", alias?: string  }
  | { name: "review_text_starts_with", alias?: string  }
  | { name: "review_text_not_starts_with", alias?: string  }
  | { name: "review_text_ends_with", alias?: string  }
  | { name: "review_text_not_ends_with", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "review_time_friendly_not", alias?: string  }
  | { name: "review_time_friendly_in", alias?: string  }
  | { name: "review_time_friendly_not_in", alias?: string  }
  | { name: "review_time_friendly_lt", alias?: string  }
  | { name: "review_time_friendly_lte", alias?: string  }
  | { name: "review_time_friendly_gt", alias?: string  }
  | { name: "review_time_friendly_gte", alias?: string  }
  | { name: "review_time_friendly_contains", alias?: string  }
  | { name: "review_time_friendly_not_contains", alias?: string  }
  | { name: "review_time_friendly_starts_with", alias?: string  }
  | { name: "review_time_friendly_not_starts_with", alias?: string  }
  | { name: "review_time_friendly_ends_with", alias?: string  }
  | { name: "review_time_friendly_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ReviewUpdateManyWithWhereNestedInput {
  where?: ReviewScalarWhereInput;
  data?: ReviewUpdateManyDataInput;
}
export type ReviewUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ReviewUpdateManyWithWhereNestedInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface ReviewUpdateManyDataInput {
  rating?: number | null;
  review_text?: string | null;
  review_time_friendly?: string | null;
  timestamp?: number | null;
}
export type ReviewUpdateManyDataInputInputObject =
  | Extract<keyof ReviewUpdateManyDataInput, string>
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface UserPhotoUpdateManyWithoutUserInput {
  create?: UserPhotoCreateWithoutUserInput[];
  delete?: UserPhotoWhereUniqueInput[];
  connect?: UserPhotoWhereUniqueInput[];
  set?: UserPhotoWhereUniqueInput[];
  disconnect?: UserPhotoWhereUniqueInput[];
  update?: UserPhotoUpdateWithWhereUniqueWithoutUserInput[];
  upsert?: UserPhotoUpsertWithWhereUniqueWithoutUserInput[];
  deleteMany?: UserPhotoScalarWhereInput[];
  updateMany?: UserPhotoUpdateManyWithWhereNestedInput[];
}
export type UserPhotoUpdateManyWithoutUserInputInputObject =
  | Extract<keyof UserPhotoUpdateManyWithoutUserInput, string>
  | { name: "create", alias?: string  }
  | { name: "delete", alias?: string  }
  | { name: "connect", alias?: string  }
  | { name: "set", alias?: string  }
  | { name: "disconnect", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "deleteMany", alias?: string  }
  | { name: "updateMany", alias?: string  };

export interface UserPhotoUpdateWithWhereUniqueWithoutUserInput {
  where?: UserPhotoWhereUniqueInput;
  data?: UserPhotoUpdateWithoutUserDataInput;
}
export type UserPhotoUpdateWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof UserPhotoUpdateWithWhereUniqueWithoutUserInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface UserPhotoUpdateWithoutUserDataInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type UserPhotoUpdateWithoutUserDataInputInputObject =
  | Extract<keyof UserPhotoUpdateWithoutUserDataInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserPhotoUpsertWithWhereUniqueWithoutUserInput {
  where?: UserPhotoWhereUniqueInput;
  update?: UserPhotoUpdateWithoutUserDataInput;
  create?: UserPhotoCreateWithoutUserInput;
}
export type UserPhotoUpsertWithWhereUniqueWithoutUserInputInputObject =
  | Extract<keyof UserPhotoUpsertWithWhereUniqueWithoutUserInput, string>
  | { name: "where", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface UserPhotoScalarWhereInput {
  id?: string | null;
  id_not?: string | null;
  id_in?: string[];
  id_not_in?: string[];
  id_lt?: string | null;
  id_lte?: string | null;
  id_gt?: string | null;
  id_gte?: string | null;
  id_contains?: string | null;
  id_not_contains?: string | null;
  id_starts_with?: string | null;
  id_not_starts_with?: string | null;
  id_ends_with?: string | null;
  id_not_ends_with?: string | null;
  url?: string | null;
  url_not?: string | null;
  url_in?: string[];
  url_not_in?: string[];
  url_lt?: string | null;
  url_lte?: string | null;
  url_gt?: string | null;
  url_gte?: string | null;
  url_contains?: string | null;
  url_not_contains?: string | null;
  url_starts_with?: string | null;
  url_not_starts_with?: string | null;
  url_ends_with?: string | null;
  url_not_ends_with?: string | null;
  thumb_url?: string | null;
  thumb_url_not?: string | null;
  thumb_url_in?: string[];
  thumb_url_not_in?: string[];
  thumb_url_lt?: string | null;
  thumb_url_lte?: string | null;
  thumb_url_gt?: string | null;
  thumb_url_gte?: string | null;
  thumb_url_contains?: string | null;
  thumb_url_not_contains?: string | null;
  thumb_url_starts_with?: string | null;
  thumb_url_not_starts_with?: string | null;
  thumb_url_ends_with?: string | null;
  thumb_url_not_ends_with?: string | null;
  caption?: string | null;
  caption_not?: string | null;
  caption_in?: string[];
  caption_not_in?: string[];
  caption_lt?: string | null;
  caption_lte?: string | null;
  caption_gt?: string | null;
  caption_gte?: string | null;
  caption_contains?: string | null;
  caption_not_contains?: string | null;
  caption_starts_with?: string | null;
  caption_not_starts_with?: string | null;
  caption_ends_with?: string | null;
  caption_not_ends_with?: string | null;
  timestamp?: number | null;
  timestamp_not?: number | null;
  timestamp_in?: number[];
  timestamp_not_in?: number[];
  timestamp_lt?: number | null;
  timestamp_lte?: number | null;
  timestamp_gt?: number | null;
  timestamp_gte?: number | null;
  friendly_time?: string | null;
  friendly_time_not?: string | null;
  friendly_time_in?: string[];
  friendly_time_not_in?: string[];
  friendly_time_lt?: string | null;
  friendly_time_lte?: string | null;
  friendly_time_gt?: string | null;
  friendly_time_gte?: string | null;
  friendly_time_contains?: string | null;
  friendly_time_not_contains?: string | null;
  friendly_time_starts_with?: string | null;
  friendly_time_not_starts_with?: string | null;
  friendly_time_ends_with?: string | null;
  friendly_time_not_ends_with?: string | null;
  width?: number | null;
  width_not?: number | null;
  width_in?: number[];
  width_not_in?: number[];
  width_lt?: number | null;
  width_lte?: number | null;
  width_gt?: number | null;
  width_gte?: number | null;
  height?: number | null;
  height_not?: number | null;
  height_in?: number[];
  height_not_in?: number[];
  height_lt?: number | null;
  height_lte?: number | null;
  height_gt?: number | null;
  height_gte?: number | null;
  AND?: UserPhotoScalarWhereInput[];
  OR?: UserPhotoScalarWhereInput[];
  NOT?: UserPhotoScalarWhereInput[];
}
export type UserPhotoScalarWhereInputInputObject =
  | Extract<keyof UserPhotoScalarWhereInput, string>
  | { name: "id", alias?: string  }
  | { name: "id_not", alias?: string  }
  | { name: "id_in", alias?: string  }
  | { name: "id_not_in", alias?: string  }
  | { name: "id_lt", alias?: string  }
  | { name: "id_lte", alias?: string  }
  | { name: "id_gt", alias?: string  }
  | { name: "id_gte", alias?: string  }
  | { name: "id_contains", alias?: string  }
  | { name: "id_not_contains", alias?: string  }
  | { name: "id_starts_with", alias?: string  }
  | { name: "id_not_starts_with", alias?: string  }
  | { name: "id_ends_with", alias?: string  }
  | { name: "id_not_ends_with", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "url_not", alias?: string  }
  | { name: "url_in", alias?: string  }
  | { name: "url_not_in", alias?: string  }
  | { name: "url_lt", alias?: string  }
  | { name: "url_lte", alias?: string  }
  | { name: "url_gt", alias?: string  }
  | { name: "url_gte", alias?: string  }
  | { name: "url_contains", alias?: string  }
  | { name: "url_not_contains", alias?: string  }
  | { name: "url_starts_with", alias?: string  }
  | { name: "url_not_starts_with", alias?: string  }
  | { name: "url_ends_with", alias?: string  }
  | { name: "url_not_ends_with", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "thumb_url_not", alias?: string  }
  | { name: "thumb_url_in", alias?: string  }
  | { name: "thumb_url_not_in", alias?: string  }
  | { name: "thumb_url_lt", alias?: string  }
  | { name: "thumb_url_lte", alias?: string  }
  | { name: "thumb_url_gt", alias?: string  }
  | { name: "thumb_url_gte", alias?: string  }
  | { name: "thumb_url_contains", alias?: string  }
  | { name: "thumb_url_not_contains", alias?: string  }
  | { name: "thumb_url_starts_with", alias?: string  }
  | { name: "thumb_url_not_starts_with", alias?: string  }
  | { name: "thumb_url_ends_with", alias?: string  }
  | { name: "thumb_url_not_ends_with", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "caption_not", alias?: string  }
  | { name: "caption_in", alias?: string  }
  | { name: "caption_not_in", alias?: string  }
  | { name: "caption_lt", alias?: string  }
  | { name: "caption_lte", alias?: string  }
  | { name: "caption_gt", alias?: string  }
  | { name: "caption_gte", alias?: string  }
  | { name: "caption_contains", alias?: string  }
  | { name: "caption_not_contains", alias?: string  }
  | { name: "caption_starts_with", alias?: string  }
  | { name: "caption_not_starts_with", alias?: string  }
  | { name: "caption_ends_with", alias?: string  }
  | { name: "caption_not_ends_with", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "timestamp_not", alias?: string  }
  | { name: "timestamp_in", alias?: string  }
  | { name: "timestamp_not_in", alias?: string  }
  | { name: "timestamp_lt", alias?: string  }
  | { name: "timestamp_lte", alias?: string  }
  | { name: "timestamp_gt", alias?: string  }
  | { name: "timestamp_gte", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "friendly_time_not", alias?: string  }
  | { name: "friendly_time_in", alias?: string  }
  | { name: "friendly_time_not_in", alias?: string  }
  | { name: "friendly_time_lt", alias?: string  }
  | { name: "friendly_time_lte", alias?: string  }
  | { name: "friendly_time_gt", alias?: string  }
  | { name: "friendly_time_gte", alias?: string  }
  | { name: "friendly_time_contains", alias?: string  }
  | { name: "friendly_time_not_contains", alias?: string  }
  | { name: "friendly_time_starts_with", alias?: string  }
  | { name: "friendly_time_not_starts_with", alias?: string  }
  | { name: "friendly_time_ends_with", alias?: string  }
  | { name: "friendly_time_not_ends_with", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "width_not", alias?: string  }
  | { name: "width_in", alias?: string  }
  | { name: "width_not_in", alias?: string  }
  | { name: "width_lt", alias?: string  }
  | { name: "width_lte", alias?: string  }
  | { name: "width_gt", alias?: string  }
  | { name: "width_gte", alias?: string  }
  | { name: "height", alias?: string  }
  | { name: "height_not", alias?: string  }
  | { name: "height_in", alias?: string  }
  | { name: "height_not_in", alias?: string  }
  | { name: "height_lt", alias?: string  }
  | { name: "height_lte", alias?: string  }
  | { name: "height_gt", alias?: string  }
  | { name: "height_gte", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface UserPhotoUpdateManyWithWhereNestedInput {
  where?: UserPhotoScalarWhereInput;
  data?: UserPhotoUpdateManyDataInput;
}
export type UserPhotoUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof UserPhotoUpdateManyWithWhereNestedInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface UserPhotoUpdateManyDataInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type UserPhotoUpdateManyDataInputInputObject =
  | Extract<keyof UserPhotoUpdateManyDataInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserUpdateManyMutationInput {
  email?: string | null;
  name?: string | null;
  user_type?: prisma.UserType | null;
  uid?: string | null;
}
export type UserUpdateManyMutationInputInputObject =
  | Extract<keyof UserUpdateManyMutationInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "uid", alias?: string  };

export interface PhoneNumberCreateInput {
  user?: UserCreateOneWithoutPhone_numberInput;
  code?: string | null;
  phone?: string;
}
export type PhoneNumberCreateInputInputObject =
  | Extract<keyof PhoneNumberCreateInput, string>
  | { name: "user", alias?: string  }
  | { name: "code", alias?: string  }
  | { name: "phone", alias?: string  };

export interface UserCreateOneWithoutPhone_numberInput {
  create?: UserCreateWithoutPhone_numberInput | null;
  connect?: UserWhereUniqueInput | null;
}
export type UserCreateOneWithoutPhone_numberInputInputObject =
  | Extract<keyof UserCreateOneWithoutPhone_numberInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserCreateWithoutPhone_numberInput {
  email?: string | null;
  name?: string;
  user_type?: prisma.UserType | null;
  reviews?: ReviewCreateManyWithoutUserInput | null;
  photos?: UserPhotoCreateManyWithoutUserInput | null;
  uid?: string;
}
export type UserCreateWithoutPhone_numberInputInputObject =
  | Extract<keyof UserCreateWithoutPhone_numberInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "reviews", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "uid", alias?: string  };

export interface PhoneNumberUpdateManyMutationInput {
  code?: string | null;
  phone?: string | null;
}
export type PhoneNumberUpdateManyMutationInputInputObject =
  | Extract<keyof PhoneNumberUpdateManyMutationInput, string>
  | { name: "code", alias?: string  }
  | { name: "phone", alias?: string  };

export interface ProductCreateInput {
  name?: string;
  url?: string;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingCreateOneInput;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number;
  photos?: ProductPhotoCreateManyWithoutProductInput | null;
  all_reviews?: ReviewCreateManyWithoutProductInput | null;
}
export type ProductCreateInputInputObject =
  | Extract<keyof ProductCreateInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "all_reviews", alias?: string  };

export interface ReviewCreateManyWithoutProductInput {
  create?: ReviewCreateWithoutProductInput[];
  connect?: ReviewWhereUniqueInput[];
}
export type ReviewCreateManyWithoutProductInputInputObject =
  | Extract<keyof ReviewCreateManyWithoutProductInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ReviewCreateWithoutProductInput {
  user?: UserCreateOneWithoutReviewsInput;
  rating?: number;
  review_text?: string;
  review_time_friendly?: string;
  timestamp?: number;
}
export type ReviewCreateWithoutProductInputInputObject =
  | Extract<keyof ReviewCreateWithoutProductInput, string>
  | { name: "user", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface UserCreateOneWithoutReviewsInput {
  create?: UserCreateWithoutReviewsInput | null;
  connect?: UserWhereUniqueInput | null;
}
export type UserCreateOneWithoutReviewsInputInputObject =
  | Extract<keyof UserCreateOneWithoutReviewsInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserCreateWithoutReviewsInput {
  email?: string | null;
  name?: string;
  phone_number?: PhoneNumberCreateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  photos?: UserPhotoCreateManyWithoutUserInput | null;
  uid?: string;
}
export type UserCreateWithoutReviewsInputInputObject =
  | Extract<keyof UserCreateWithoutReviewsInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "uid", alias?: string  };

export interface ProductUpdateInput {
  name?: string | null;
  url?: string | null;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingUpdateOneRequiredInput | null;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number | null;
  photos?: ProductPhotoUpdateManyWithoutProductInput | null;
  all_reviews?: ReviewUpdateManyWithoutProductInput | null;
}
export type ProductUpdateInputInputObject =
  | Extract<keyof ProductUpdateInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "all_reviews", alias?: string  };

export interface ReviewUpdateManyWithoutProductInput {
  create?: ReviewCreateWithoutProductInput[];
  delete?: ReviewWhereUniqueInput[];
  connect?: ReviewWhereUniqueInput[];
  set?: ReviewWhereUniqueInput[];
  disconnect?: ReviewWhereUniqueInput[];
  update?: ReviewUpdateWithWhereUniqueWithoutProductInput[];
  upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput[];
  deleteMany?: ReviewScalarWhereInput[];
  updateMany?: ReviewUpdateManyWithWhereNestedInput[];
}
export type ReviewUpdateManyWithoutProductInputInputObject =
  | Extract<keyof ReviewUpdateManyWithoutProductInput, string>
  | { name: "create", alias?: string  }
  | { name: "delete", alias?: string  }
  | { name: "connect", alias?: string  }
  | { name: "set", alias?: string  }
  | { name: "disconnect", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "deleteMany", alias?: string  }
  | { name: "updateMany", alias?: string  };

export interface ReviewUpdateWithWhereUniqueWithoutProductInput {
  where?: ReviewWhereUniqueInput;
  data?: ReviewUpdateWithoutProductDataInput;
}
export type ReviewUpdateWithWhereUniqueWithoutProductInputInputObject =
  | Extract<keyof ReviewUpdateWithWhereUniqueWithoutProductInput, string>
  | { name: "where", alias?: string  }
  | { name: "data", alias?: string  };

export interface ReviewUpdateWithoutProductDataInput {
  user?: UserUpdateOneRequiredWithoutReviewsInput | null;
  rating?: number | null;
  review_text?: string | null;
  review_time_friendly?: string | null;
  timestamp?: number | null;
}
export type ReviewUpdateWithoutProductDataInputInputObject =
  | Extract<keyof ReviewUpdateWithoutProductDataInput, string>
  | { name: "user", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface UserUpdateOneRequiredWithoutReviewsInput {
  create?: UserCreateWithoutReviewsInput | null;
  update?: UserUpdateWithoutReviewsDataInput | null;
  upsert?: UserUpsertWithoutReviewsInput | null;
  connect?: UserWhereUniqueInput | null;
}
export type UserUpdateOneRequiredWithoutReviewsInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutReviewsInput, string>
  | { name: "create", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserUpdateWithoutReviewsDataInput {
  email?: string | null;
  name?: string | null;
  phone_number?: PhoneNumberUpdateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  photos?: UserPhotoUpdateManyWithoutUserInput | null;
  uid?: string | null;
}
export type UserUpdateWithoutReviewsDataInputInputObject =
  | Extract<keyof UserUpdateWithoutReviewsDataInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "photos", alias?: string  }
  | { name: "uid", alias?: string  };

export interface UserUpsertWithoutReviewsInput {
  update?: UserUpdateWithoutReviewsDataInput;
  create?: UserCreateWithoutReviewsInput;
}
export type UserUpsertWithoutReviewsInputInputObject =
  | Extract<keyof UserUpsertWithoutReviewsInput, string>
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ReviewUpsertWithWhereUniqueWithoutProductInput {
  where?: ReviewWhereUniqueInput;
  update?: ReviewUpdateWithoutProductDataInput;
  create?: ReviewCreateWithoutProductInput;
}
export type ReviewUpsertWithWhereUniqueWithoutProductInputInputObject =
  | Extract<keyof ReviewUpsertWithWhereUniqueWithoutProductInput, string>
  | { name: "where", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ProductUpdateManyMutationInput {
  name?: string | null;
  url?: string | null;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number | null;
}
export type ProductUpdateManyMutationInputInputObject =
  | Extract<keyof ProductUpdateManyMutationInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  };

export interface ProductRatingUpdateManyMutationInput {
  aggregate_rating?: number | null;
  votes?: number | null;
}
export type ProductRatingUpdateManyMutationInputInputObject =
  | Extract<keyof ProductRatingUpdateManyMutationInput, string>
  | { name: "aggregate_rating", alias?: string  }
  | { name: "votes", alias?: string  };

export interface ReviewCreateInput {
  user?: UserCreateOneWithoutReviewsInput;
  product?: ProductCreateOneWithoutAll_reviewsInput;
  rating?: number;
  review_text?: string;
  review_time_friendly?: string;
  timestamp?: number;
}
export type ReviewCreateInputInputObject =
  | Extract<keyof ReviewCreateInput, string>
  | { name: "user", alias?: string  }
  | { name: "product", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface ReviewUpdateInput {
  user?: UserUpdateOneRequiredWithoutReviewsInput | null;
  product?: ProductUpdateOneRequiredWithoutAll_reviewsInput | null;
  rating?: number | null;
  review_text?: string | null;
  review_time_friendly?: string | null;
  timestamp?: number | null;
}
export type ReviewUpdateInputInputObject =
  | Extract<keyof ReviewUpdateInput, string>
  | { name: "user", alias?: string  }
  | { name: "product", alias?: string  }
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface ReviewUpdateManyMutationInput {
  rating?: number | null;
  review_text?: string | null;
  review_time_friendly?: string | null;
  timestamp?: number | null;
}
export type ReviewUpdateManyMutationInputInputObject =
  | Extract<keyof ReviewUpdateManyMutationInput, string>
  | { name: "rating", alias?: string  }
  | { name: "review_text", alias?: string  }
  | { name: "review_time_friendly", alias?: string  }
  | { name: "timestamp", alias?: string  };

export interface ProductPhotoCreateInput {
  product?: ProductCreateOneWithoutPhotosInput;
  url?: string;
  thumb_url?: string;
  caption?: string;
  timestamp?: number;
  friendly_time?: string;
  width?: number;
  height?: number;
}
export type ProductPhotoCreateInputInputObject =
  | Extract<keyof ProductPhotoCreateInput, string>
  | { name: "product", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface ProductCreateOneWithoutPhotosInput {
  create?: ProductCreateWithoutPhotosInput | null;
  connect?: ProductWhereUniqueInput | null;
}
export type ProductCreateOneWithoutPhotosInputInputObject =
  | Extract<keyof ProductCreateOneWithoutPhotosInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ProductCreateWithoutPhotosInput {
  name?: string;
  url?: string;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingCreateOneInput;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number;
  all_reviews?: ReviewCreateManyWithoutProductInput | null;
}
export type ProductCreateWithoutPhotosInputInputObject =
  | Extract<keyof ProductCreateWithoutPhotosInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "all_reviews", alias?: string  };

export interface ProductPhotoUpdateInput {
  product?: ProductUpdateOneRequiredWithoutPhotosInput | null;
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type ProductPhotoUpdateInputInputObject =
  | Extract<keyof ProductPhotoUpdateInput, string>
  | { name: "product", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface ProductUpdateOneRequiredWithoutPhotosInput {
  create?: ProductCreateWithoutPhotosInput | null;
  update?: ProductUpdateWithoutPhotosDataInput | null;
  upsert?: ProductUpsertWithoutPhotosInput | null;
  connect?: ProductWhereUniqueInput | null;
}
export type ProductUpdateOneRequiredWithoutPhotosInputInputObject =
  | Extract<keyof ProductUpdateOneRequiredWithoutPhotosInput, string>
  | { name: "create", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "connect", alias?: string  };

export interface ProductUpdateWithoutPhotosDataInput {
  name?: string | null;
  url?: string | null;
  thumb?: string | null;
  featured_image?: string | null;
  photos_url?: string | null;
  user_rating?: ProductRatingUpdateOneRequiredInput | null;
  has_online_delivery?: boolean | null;
  is_delivering_now?: boolean | null;
  deeplink?: string | null;
  photo_count?: number | null;
  all_reviews?: ReviewUpdateManyWithoutProductInput | null;
}
export type ProductUpdateWithoutPhotosDataInputInputObject =
  | Extract<keyof ProductUpdateWithoutPhotosDataInput, string>
  | { name: "name", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb", alias?: string  }
  | { name: "featured_image", alias?: string  }
  | { name: "photos_url", alias?: string  }
  | { name: "user_rating", alias?: string  }
  | { name: "has_online_delivery", alias?: string  }
  | { name: "is_delivering_now", alias?: string  }
  | { name: "deeplink", alias?: string  }
  | { name: "photo_count", alias?: string  }
  | { name: "all_reviews", alias?: string  };

export interface ProductUpsertWithoutPhotosInput {
  update?: ProductUpdateWithoutPhotosDataInput;
  create?: ProductCreateWithoutPhotosInput;
}
export type ProductUpsertWithoutPhotosInputInputObject =
  | Extract<keyof ProductUpsertWithoutPhotosInput, string>
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface ProductPhotoUpdateManyMutationInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type ProductPhotoUpdateManyMutationInputInputObject =
  | Extract<keyof ProductPhotoUpdateManyMutationInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserPhotoCreateInput {
  user?: UserCreateOneWithoutPhotosInput;
  url?: string;
  thumb_url?: string;
  caption?: string;
  timestamp?: number;
  friendly_time?: string;
  width?: number;
  height?: number;
}
export type UserPhotoCreateInputInputObject =
  | Extract<keyof UserPhotoCreateInput, string>
  | { name: "user", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserCreateOneWithoutPhotosInput {
  create?: UserCreateWithoutPhotosInput | null;
  connect?: UserWhereUniqueInput | null;
}
export type UserCreateOneWithoutPhotosInputInputObject =
  | Extract<keyof UserCreateOneWithoutPhotosInput, string>
  | { name: "create", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserCreateWithoutPhotosInput {
  email?: string | null;
  name?: string;
  phone_number?: PhoneNumberCreateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  reviews?: ReviewCreateManyWithoutUserInput | null;
  uid?: string;
}
export type UserCreateWithoutPhotosInputInputObject =
  | Extract<keyof UserCreateWithoutPhotosInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "reviews", alias?: string  }
  | { name: "uid", alias?: string  };

export interface UserPhotoUpdateInput {
  user?: UserUpdateOneRequiredWithoutPhotosInput | null;
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type UserPhotoUpdateInputInputObject =
  | Extract<keyof UserPhotoUpdateInput, string>
  | { name: "user", alias?: string  }
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserUpdateOneRequiredWithoutPhotosInput {
  create?: UserCreateWithoutPhotosInput | null;
  update?: UserUpdateWithoutPhotosDataInput | null;
  upsert?: UserUpsertWithoutPhotosInput | null;
  connect?: UserWhereUniqueInput | null;
}
export type UserUpdateOneRequiredWithoutPhotosInputInputObject =
  | Extract<keyof UserUpdateOneRequiredWithoutPhotosInput, string>
  | { name: "create", alias?: string  }
  | { name: "update", alias?: string  }
  | { name: "upsert", alias?: string  }
  | { name: "connect", alias?: string  };

export interface UserUpdateWithoutPhotosDataInput {
  email?: string | null;
  name?: string | null;
  phone_number?: PhoneNumberUpdateManyWithoutUserInput | null;
  user_type?: prisma.UserType | null;
  reviews?: ReviewUpdateManyWithoutUserInput | null;
  uid?: string | null;
}
export type UserUpdateWithoutPhotosDataInputInputObject =
  | Extract<keyof UserUpdateWithoutPhotosDataInput, string>
  | { name: "email", alias?: string  }
  | { name: "name", alias?: string  }
  | { name: "phone_number", alias?: string  }
  | { name: "user_type", alias?: string  }
  | { name: "reviews", alias?: string  }
  | { name: "uid", alias?: string  };

export interface UserUpsertWithoutPhotosInput {
  update?: UserUpdateWithoutPhotosDataInput;
  create?: UserCreateWithoutPhotosInput;
}
export type UserUpsertWithoutPhotosInputInputObject =
  | Extract<keyof UserUpsertWithoutPhotosInput, string>
  | { name: "update", alias?: string  }
  | { name: "create", alias?: string  };

export interface UserPhotoUpdateManyMutationInput {
  url?: string | null;
  thumb_url?: string | null;
  caption?: string | null;
  timestamp?: number | null;
  friendly_time?: string | null;
  width?: number | null;
  height?: number | null;
}
export type UserPhotoUpdateManyMutationInputInputObject =
  | Extract<keyof UserPhotoUpdateManyMutationInput, string>
  | { name: "url", alias?: string  }
  | { name: "thumb_url", alias?: string  }
  | { name: "caption", alias?: string  }
  | { name: "timestamp", alias?: string  }
  | { name: "friendly_time", alias?: string  }
  | { name: "width", alias?: string  }
  | { name: "height", alias?: string  };

export interface UserSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: UserWhereInput | null;
  AND?: UserSubscriptionWhereInput[];
  OR?: UserSubscriptionWhereInput[];
  NOT?: UserSubscriptionWhereInput[];
}
export type UserSubscriptionWhereInputInputObject =
  | Extract<keyof UserSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface PhoneNumberSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: PhoneNumberWhereInput | null;
  AND?: PhoneNumberSubscriptionWhereInput[];
  OR?: PhoneNumberSubscriptionWhereInput[];
  NOT?: PhoneNumberSubscriptionWhereInput[];
}
export type PhoneNumberSubscriptionWhereInputInputObject =
  | Extract<keyof PhoneNumberSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: ProductWhereInput | null;
  AND?: ProductSubscriptionWhereInput[];
  OR?: ProductSubscriptionWhereInput[];
  NOT?: ProductSubscriptionWhereInput[];
}
export type ProductSubscriptionWhereInputInputObject =
  | Extract<keyof ProductSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductRatingSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: ProductRatingWhereInput | null;
  AND?: ProductRatingSubscriptionWhereInput[];
  OR?: ProductRatingSubscriptionWhereInput[];
  NOT?: ProductRatingSubscriptionWhereInput[];
}
export type ProductRatingSubscriptionWhereInputInputObject =
  | Extract<keyof ProductRatingSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ReviewSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: ReviewWhereInput | null;
  AND?: ReviewSubscriptionWhereInput[];
  OR?: ReviewSubscriptionWhereInput[];
  NOT?: ReviewSubscriptionWhereInput[];
}
export type ReviewSubscriptionWhereInputInputObject =
  | Extract<keyof ReviewSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface ProductPhotoSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: ProductPhotoWhereInput | null;
  AND?: ProductPhotoSubscriptionWhereInput[];
  OR?: ProductPhotoSubscriptionWhereInput[];
  NOT?: ProductPhotoSubscriptionWhereInput[];
}
export type ProductPhotoSubscriptionWhereInputInputObject =
  | Extract<keyof ProductPhotoSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };

export interface UserPhotoSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[];
  updatedFields_contains?: string | null;
  updatedFields_contains_every?: string[];
  updatedFields_contains_some?: string[];
  node?: UserPhotoWhereInput | null;
  AND?: UserPhotoSubscriptionWhereInput[];
  OR?: UserPhotoSubscriptionWhereInput[];
  NOT?: UserPhotoSubscriptionWhereInput[];
}
export type UserPhotoSubscriptionWhereInputInputObject =
  | Extract<keyof UserPhotoSubscriptionWhereInput, string>
  | { name: "mutation_in", alias?: string  }
  | { name: "updatedFields_contains", alias?: string  }
  | { name: "updatedFields_contains_every", alias?: string  }
  | { name: "updatedFields_contains_some", alias?: string  }
  | { name: "node", alias?: string  }
  | { name: "AND", alias?: string  }
  | { name: "OR", alias?: string  }
  | { name: "NOT", alias?: string  };


export type UserTypeValues =
  | "ADMIN"
  | "SELLER"
  | "CONSUMER";

export type PhoneNumberOrderByInputValues =
  | "code_ASC"
  | "code_DESC"
  | "phone_ASC"
  | "phone_DESC"
  | "id_ASC"
  | "id_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type ReviewOrderByInputValues =
  | "id_ASC"
  | "id_DESC"
  | "rating_ASC"
  | "rating_DESC"
  | "review_text_ASC"
  | "review_text_DESC"
  | "review_time_friendly_ASC"
  | "review_time_friendly_DESC"
  | "timestamp_ASC"
  | "timestamp_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type ProductPhotoOrderByInputValues =
  | "id_ASC"
  | "id_DESC"
  | "url_ASC"
  | "url_DESC"
  | "thumb_url_ASC"
  | "thumb_url_DESC"
  | "caption_ASC"
  | "caption_DESC"
  | "timestamp_ASC"
  | "timestamp_DESC"
  | "friendly_time_ASC"
  | "friendly_time_DESC"
  | "width_ASC"
  | "width_DESC"
  | "height_ASC"
  | "height_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type UserPhotoOrderByInputValues =
  | "id_ASC"
  | "id_DESC"
  | "url_ASC"
  | "url_DESC"
  | "thumb_url_ASC"
  | "thumb_url_DESC"
  | "caption_ASC"
  | "caption_DESC"
  | "timestamp_ASC"
  | "timestamp_DESC"
  | "friendly_time_ASC"
  | "friendly_time_DESC"
  | "width_ASC"
  | "width_DESC"
  | "height_ASC"
  | "height_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type UserOrderByInputValues =
  | "id_ASC"
  | "id_DESC"
  | "email_ASC"
  | "email_DESC"
  | "name_ASC"
  | "name_DESC"
  | "user_type_ASC"
  | "user_type_DESC"
  | "uid_ASC"
  | "uid_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type ProductOrderByInputValues =
  | "id_ASC"
  | "id_DESC"
  | "name_ASC"
  | "name_DESC"
  | "url_ASC"
  | "url_DESC"
  | "thumb_ASC"
  | "thumb_DESC"
  | "featured_image_ASC"
  | "featured_image_DESC"
  | "photos_url_ASC"
  | "photos_url_DESC"
  | "has_online_delivery_ASC"
  | "has_online_delivery_DESC"
  | "is_delivering_now_ASC"
  | "is_delivering_now_DESC"
  | "deeplink_ASC"
  | "deeplink_DESC"
  | "photo_count_ASC"
  | "photo_count_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type ProductRatingOrderByInputValues =
  | "aggregate_rating_ASC"
  | "aggregate_rating_DESC"
  | "votes_ASC"
  | "votes_DESC"
  | "id_ASC"
  | "id_DESC"
  | "createdAt_ASC"
  | "createdAt_DESC"
  | "updatedAt_ASC"
  | "updatedAt_DESC";

export type MutationTypeValues =
  | "CREATED"
  | "UPDATED"
  | "DELETED";

