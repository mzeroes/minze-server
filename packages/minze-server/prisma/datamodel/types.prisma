type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  displayName: String!
  phoneNumber: String!
  responseRate: Float
  responseTime: Int
  ownedRestaurant: [Restaurant!]!
  location: [Location!]!
  orders: [Order!]!
  paymentAccount: [PaymentAccount!]! 
  sentMessages: [Message!]! @relation(name: "SentMessages")
  receivedMessages: [Message!]! @relation(name: "ReceivedMessages")
  notifications: [Notification!]!
  profilePicture: Picture
  experiences: [Experience!]!
  accountType: UserType @default(value: ADMIN)
  # firebase UID
  uid: String! @unique
}

type Restaurant {
  id: ID! @id
  name: String!
  shortDescription: String!
  description: String!
  slug: String!
  maxGuests: Int!
  numRatings: Int!
  avgRating: Float
  reviews: [Review!]!
  location: Location
  # analytics: Analytics
  policies: Policies
  menu: [MenuItem!]! 
  orders: [Order!]! 
  pictures: [Picture!]!
  popularity: Int!
  avgPricePerPerson: Int!
  isCurated: Boolean! @default(value: true)
}

type Pricing {
  id: ID! @id
  monthlyDiscount: Int
  weeklyDiscount: Int
  price: Int!
  smartPricing: Boolean! @default(value: false)
  basePrice: Int!
  averageWeekly: Int!
  averageMonthly: Int!
  weekendPricing: Int
}

type Policies {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  openingTime: Float!
  closingTime: Float!
}

type MenuItem {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  shortDescription: String!
  title: String!
  description: String!
  pricing: Pricing!
  pictures: [Picture!]!
  reviews: [Review!]!
  # add ratings etc.
}

#type Analytics {
#  id: ID! @id
#  lastWeek: Int!
#}

type Location {
  title: String
  id: ID! @id
  lat: Float!
  lng: Float!
  neighbourHood: Neighbourhood
  address: String!
  directions: String!
}

type Neighbourhood {
  id: ID! @id
  locations: [Location!]!
  name: String!
  slug: String!
  homePreview: Picture
  city: City!
  featured: Boolean!
  popularity: Int!
}

type City {
  id: ID! @id
  name: String!
  neighbourhoods: [Neighbourhood!]!
}

type Picture {
  id: ID! @id
  altText: String
  url: String!
}

type Experience {
  id: ID! @id
  category: ExperienceCategory
  title: String!
  host: User!
  location: Location!
  pricePerPerson: Int!
  reviews: [Review!]!
  preview: Picture!
  popularity: Int!
}

type ExperienceCategory {
  id: ID! @id
  mainColor: String! @default(value: "#123456")
  name: String!
}

type Review {
  id: ID! @id
  createdAt: DateTime! @createdAt
  text: String!
  stars: Int!
  accuracy: Int!
  location: Int!
  checkIn: Int!
  value: Int!
  cleanliness: Int!
  communication: Int!
  order: Order!
  experience: Experience
}

type Order {
  id: ID! @id
  createdAt: DateTime! @createdAt
  bookee: User!
  restaurant: Restaurant!
  startDate: DateTime!
  endDate: DateTime! 
  payment: Payment! @relation(link: TABLE)
}

type Payment {
  id: ID! @id
  createdAt: DateTime! @createdAt
  serviceFee: Float!
  restaurantPrice: Float!
  totalPrice: Float!
  order: Order!
  paymentMethod: PaymentAccount!
}

type PaymentAccount {
  id: ID! @id
  createdAt: DateTime! @createdAt
  type: PAYMENT_PROVIDER
  user: User!
  payments: [Payment!]!
  paypal: PaypalInformation
  paytm: PaytmInformation
  creditcard: CreditCardInformation
  debitcard: DebitCardInformation
}

type PaypalInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  email: String!
}

type PaytmInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  phone: String!
}

type CreditCardInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
}

type DebitCardInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
}
type Message {
  id: ID! @id
  createdAt: DateTime! @createdAt
  from: User! @relation(name: "SentMessages")
  to: User! @relation(name: "ReceivedMessages")
  deliveredAt: DateTime!
  readAt: DateTime!
}

type Notification {
  id: ID! @id
  createdAt: DateTime! @createdAt
  type: NOTIFICATION_TYPE
  user: User!
  link: String!
  readDate: DateTime!
}
