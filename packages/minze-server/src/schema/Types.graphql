
type Viewer {
  me: User!
  orders: [Order!]!
}

type AuthPayload {
  token: String!
  user: User!
}

type MutationResult {
  success: Boolean!
}

type ExperiencesByCity {
  experiences: [Experience!]!
  city: City!
}

type Reservation {
  id: ID!
  title: String!
  avgPricePerPerson: Int!
  pictures: [Picture!]!
  location: Location!
  isCurated: Boolean!
  slug: String!
  popularity: Int!
}

type Experience {
  id: ID!
  category: ExperienceCategory
  title: String!
  location: Location!
  pricePerPerson: Int!
  reviews: [Review!]!
  preview: Picture!
  popularity: Int!
}

type Review {
  id: ID!
  accuracy: Int!
  checkIn: Int!
  cleanliness: Int!
  communication: Int!
  createdAt: DateTime!
  location: Int!
  stars: Int!
  text: String!
  value: Int!
}

type Neighbourhood {
  id: ID!
  name: String!
  slug: String!
  homePreview: Picture
  city: City!
  featured: Boolean!
  popularity: Int!
}

type Location {
  id: ID!
  lat: Float!
  lng: Float!
  address: String!
  directions: String!
}

type Picture {
  id: ID!
  url: String!
}

type City {
  id: ID!
  name: String!
}

type ExperienceCategory {
  id: ID!
  mainColor: String!
  name: String!
}

type User {
  orders: [Order!]
  createdAt: DateTime!
  displayName: String!
  experiences: [Experience!]
  id: ID!
  location: [Location!]
  notifications: [Notification!]
  ownedRestaurants: [Restaurant!]
  paymentAccount: [PaymentAccount!]
  phoneNumber: String!
  profilePicture: Picture
  receivedMessages: [Message!]
  responseRate: Float
  responseTime: Int
  sentMessages: [Message!]
  updatedAt: DateTime!
  uid: String!
}

type PaymentAccount {
  id: ID!
  createdAt: DateTime!
  type: PAYMENT_PROVIDER
  user: User!
  payments: [Payment!]!
  paypal: PaypalInformation
  paytm: PaytmInformation
  debitcard: DebitCardInformation
  creditcard: CreditCardInformation
}

type Restaurant {
  id: ID!
  name: String
  shortDescription: String!
  description: String!
  slug: String!
  maxGuests: Int!
  numRatings: Int!
  avgPricePerPerson: Int!
  avgRating: Float
  reviews: [Review!]!
  location: Location
  policies: Policies
  menu: [MenuItem!]!
  orders: [Order!]!
  pictures: [Picture!]
  popularity: Int!
}

type Order {
  id: ID!
  createdAt: DateTime!
  bookee: User!
  restaurant: Restaurant!
  startDate: DateTime!
  endDate: DateTime!
  payment: Payment!
}

type Notification {
  createdAt: DateTime!
  id: ID!
  link: String!
  readDate: DateTime!
  type: NOTIFICATION_TYPE
  user: User!
}

type Payment {
  order: Order!
  createdAt: DateTime!
  id: ID!
  paymentMethod: PaymentAccount!
  serviceFee: Float!
}

type PaypalInformation {
  createdAt: DateTime!
  email: String!
  id: ID!
}

type PaytmInformation {
  createdAt: DateTime!
  mobile: String!
  id: ID!
}

type CreditCardInformation {
  cardNumber: String!
  country: String!
  createdAt: DateTime!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  firstName: String!
  id: ID!
  lastName: String!
  postalCode: String!
  securityCode: String!
}
type DebitCardInformation {
  cardNumber: String!
  country: String!
  createdAt: DateTime!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  firstName: String!
  id: ID!
  lastName: String!
  postalCode: String!
  securityCode: String!
}

type Message {
  createdAt: DateTime!
  deliveredAt: DateTime!
  id: ID!
  readAt: DateTime!
}

type Pricing {
  id: ID!
  monthlyDiscount: Int
  weeklyDiscount: Int
  price: Int!
  smartPricing: Boolean!
  basePrice: Int!
  averageWeekly: Int!
  averageMonthly: Int!
  weekendPricing: Int
}

type Policies {
  id: ID!
  createdAt: DateTime! 
  updatedAt: DateTime! 
  openingTime: Float!
  closingTime: Float!
}

type MenuItem {
  id: ID!
  shortDescription: String!
  title: String!
  description: String!
  pricing: Pricing!
  pictures: [Picture!]!
  reviews: [Review!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}
