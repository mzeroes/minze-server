type User {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  displayName: String!
  phoneNumber: String!
  responseRate: Float
  responseTime: Int
  isSuperHost: Boolean! @default(value: false)
  ownedPlaces: [Place!]!
  location: Location @relation(link: TABLE)
  orders: [Order!]! @relation(link: TABLE)
  paymentAccount: [PaymentAccount!]! @relation(link: TABLE)
  sentMessages: [Message!]! @relation(name: "SentMessages")
  receivedMessages: [Message!]! @relation(name: "ReceivedMessages")
  notifications: [Notification!]!
  profilePicture: Picture
  hostingExperiences: [Experience!]!
  accountType: UserType @default(value: ADMIN)
  # firebase UID
  uid: String! @unique
}

type Place {
  id: ID! @id
  name: String!
  size: PLACE_SIZES
  shortDescription: String!
  description: String!
  slug: String!
  maxGuests: Int!
  numBedrooms: Int!
  numBeds: Int!
  numBaths: Int!
  reviews: [Review!]!
  amenities: Amenities! @relation(link: TABLE)
  host: User!
  pricing: Pricing! @relation(link: TABLE)
  location: Location! @relation(link: TABLE)
  views: Views! @relation(link: TABLE)
  guestRequirements: GuestRequirements @relation(link: TABLE)
  policies: Policies @relation(link: TABLE)
  houseRules: HouseRules
  orders: [Order!]! @relation(link: TABLE)
  pictures: [Picture!]!
  popularity: Int!
}

type Pricing {
  id: ID! @id
  place: Place!
  monthlyDiscount: Int
  weeklyDiscount: Int
  perNight: Int!
  smartPricing: Boolean! @default(value: false)
  basePrice: Int!
  averageWeekly: Int!
  averageMonthly: Int!
  cleaningFee: Int
  securityDeposit: Int
  extraGuests: Int
  weekendPricing: Int
  currency: CURRENCY
}

type GuestRequirements {
  id: ID! @id
  govIssuedId: Boolean! @default(value: false)
  recommendationsFromOtherHosts: Boolean! @default(value: false)
  guestTripInformation: Boolean! @default(value: false)
  place: Place!
}

type Policies {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  checkInStartTime: Float!
  checkInEndTime: Float!
  checkoutTime: Float!
  place: Place!
}

type HouseRules {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  suitableForChildren: Boolean
  suitableForInfants: Boolean
  petsAllowed: Boolean
  smokingAllowed: Boolean
  partiesAndEventsAllowed: Boolean
  additionalRules: String
}

type Views {
  id: ID! @id
  lastWeek: Int!
  place: Place!
}

type Location {
  id: ID! @id
  lat: Float!
  lng: Float!
  neighbourHood: Neighbourhood
  user: User
  place: Place
  address: String!
  directions: String!
  experience: Experience
  restaurant: Restaurant 
}

type Neighbourhood {
  id: ID! @id
  locations: [Location!]! @relation(link: TABLE)
  name: String!
  slug: String!
  homePreview: Picture
  city: City!
  featured: Boolean!
  popularity: Int!
}

type City {
  id: ID! @id
  name: String!
  neighbourhoods: [Neighbourhood!]!
}

type Picture {
  id: ID! @id
  url: String!
}

type Experience {
  id: ID! @id
  category: ExperienceCategory @relation(link: TABLE)
  title: String!
  host: User!
  location: Location! @relation(link: TABLE)
  pricePerPerson: Int!
  reviews: [Review!]!
  preview: Picture!
  popularity: Int!
}

type ExperienceCategory {
  id: ID! @id
  mainColor: String! @default(value: "#123456")
  name: String!
  experience: Experience
}

type Amenities {
  id: ID! @id
  place: Place!
  elevator: Boolean! @default(value: false)
  petsAllowed: Boolean! @default(value: false)
  internet: Boolean! @default(value: false)
  kitchen: Boolean! @default(value: false)
  wirelessInternet: Boolean! @default(value: false)
  familyKidFriendly: Boolean! @default(value: false)
  freeParkingOnPremises: Boolean! @default(value: false)
  hotTub: Boolean! @default(value: false)
  pool: Boolean! @default(value: false)
  smokingAllowed: Boolean! @default(value: false)
  wheelchairAccessible: Boolean! @default(value: false)
  breakfast: Boolean! @default(value: false)
  cableTv: Boolean! @default(value: false)
  suitableForEvents: Boolean! @default(value: false)
  dryer: Boolean! @default(value: false)
  washer: Boolean! @default(value: false)
  indoorFireplace: Boolean! @default(value: false)
  tv: Boolean! @default(value: false)
  heating: Boolean! @default(value: false)
  hangers: Boolean! @default(value: false)
  iron: Boolean! @default(value: false)
  hairDryer: Boolean! @default(value: false)
  doorman: Boolean! @default(value: false)
  paidParkingOffPremises: Boolean! @default(value: false)
  freeParkingOnStreet: Boolean! @default(value: false)
  gym: Boolean! @default(value: false)
  airConditioning: Boolean! @default(value: false)
  shampoo: Boolean! @default(value: false)
  essentials: Boolean! @default(value: false)
  laptopFriendlyWorkspace: Boolean! @default(value: false)
  privateEntrance: Boolean! @default(value: false)
  buzzerWirelessIntercom: Boolean! @default(value: false)
  babyBath: Boolean! @default(value: false)
  babyMonitor: Boolean! @default(value: false)
  babysitterRecommendations: Boolean! @default(value: false)
  bathtub: Boolean! @default(value: false)
  changingTable: Boolean! @default(value: false)
  childrensBooksAndToys: Boolean! @default(value: false)
  childrensDinnerware: Boolean! @default(value: false)
  crib: Boolean! @default(value: false)
}

type Review {
  id: ID! @id
  createdAt: DateTime! @createdAt
  text: String!
  stars: Int!
  accuracy: Int!
  location: Int!
  checkIn: Int!
  value: Int!
  cleanliness: Int!
  communication: Int!
  place: Place!
  experience: Experience
}

type Order {
  id: ID! @id
  createdAt: DateTime! @createdAt
  bookee: User!
  place: Place!
  startDate: DateTime!
  endDate: DateTime!
  payment: Payment
}

type Payment {
  id: ID! @id
  createdAt: DateTime! @createdAt
  serviceFee: Float!
  placePrice: Float!
  totalPrice: Float!
  order: Order! @relation(link: TABLE)
  paymentMethod: PaymentAccount! @relation(link: TABLE)
}

type PaymentAccount {
  id: ID! @id
  createdAt: DateTime! @createdAt
  type: PAYMENT_PROVIDER
  user: User!
  payments: [Payment!]!
  paypal: PaypalInformation
  creditcard: CreditCardInformation
}

type PaypalInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  email: String!
  paymentAccount: PaymentAccount! @relation(link: TABLE)
}

type PaytmInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  phone: String!
  paymentAccount: PaymentAccount! @relation(link: TABLE)
}

type CreditCardInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
  paymentAccount: PaymentAccount @relation(link: TABLE)
}

type DebitCardInformation {
  id: ID! @id
  createdAt: DateTime! @createdAt
  cardNumber: String!
  expiresOnMonth: Int!
  expiresOnYear: Int!
  securityCode: String!
  firstName: String!
  lastName: String!
  postalCode: String!
  country: String!
  paymentAccount: PaymentAccount @relation(link: TABLE)
}
type Message {
  id: ID! @id
  createdAt: DateTime! @createdAt
  from: User! @relation(name: "SentMessages")
  to: User! @relation(name: "ReceivedMessages")
  deliveredAt: DateTime!
  readAt: DateTime!
}

type Notification {
  id: ID! @id
  createdAt: DateTime! @createdAt
  type: NOTIFICATION_TYPE
  user: User!
  link: String!
  readDate: DateTime!
}

type Restaurant {
  id: ID! @id
  createdAt: DateTime! @createdAt
  title: String!
  avgPricePerPerson: Int!
  pictures: [Picture!]!
  location: Location! @relation(link: TABLE)
  isCurated: Boolean! @default(value: true)
  slug: String!
  popularity: Int!
}
